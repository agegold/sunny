#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7574157216459850782) {
   out_7574157216459850782[0] = 0;
   out_7574157216459850782[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7574157216459850782[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7574157216459850782[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7574157216459850782[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7574157216459850782[5] = -sin(in_vec[1]);
   out_7574157216459850782[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7574157216459850782[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7574157216459850782[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7574157216459850782[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7574157216459850782[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7574157216459850782[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7574157216459850782[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7574157216459850782[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7574157216459850782[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7574157216459850782[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7574157216459850782[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7574157216459850782[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4055774789120932026) {
   out_4055774789120932026[0] = delta_x[0] + nom_x[0];
   out_4055774789120932026[1] = delta_x[1] + nom_x[1];
   out_4055774789120932026[2] = delta_x[2] + nom_x[2];
   out_4055774789120932026[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4055774789120932026[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4055774789120932026[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4055774789120932026[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4055774789120932026[7] = delta_x[6] + nom_x[7];
   out_4055774789120932026[8] = delta_x[7] + nom_x[8];
   out_4055774789120932026[9] = delta_x[8] + nom_x[9];
   out_4055774789120932026[10] = delta_x[9] + nom_x[10];
   out_4055774789120932026[11] = delta_x[10] + nom_x[11];
   out_4055774789120932026[12] = delta_x[11] + nom_x[12];
   out_4055774789120932026[13] = delta_x[12] + nom_x[13];
   out_4055774789120932026[14] = delta_x[13] + nom_x[14];
   out_4055774789120932026[15] = delta_x[14] + nom_x[15];
   out_4055774789120932026[16] = delta_x[15] + nom_x[16];
   out_4055774789120932026[17] = delta_x[16] + nom_x[17];
   out_4055774789120932026[18] = delta_x[17] + nom_x[18];
   out_4055774789120932026[19] = delta_x[18] + nom_x[19];
   out_4055774789120932026[20] = delta_x[19] + nom_x[20];
   out_4055774789120932026[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4730548230420475348) {
   out_4730548230420475348[0] = -nom_x[0] + true_x[0];
   out_4730548230420475348[1] = -nom_x[1] + true_x[1];
   out_4730548230420475348[2] = -nom_x[2] + true_x[2];
   out_4730548230420475348[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4730548230420475348[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4730548230420475348[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4730548230420475348[6] = -nom_x[7] + true_x[7];
   out_4730548230420475348[7] = -nom_x[8] + true_x[8];
   out_4730548230420475348[8] = -nom_x[9] + true_x[9];
   out_4730548230420475348[9] = -nom_x[10] + true_x[10];
   out_4730548230420475348[10] = -nom_x[11] + true_x[11];
   out_4730548230420475348[11] = -nom_x[12] + true_x[12];
   out_4730548230420475348[12] = -nom_x[13] + true_x[13];
   out_4730548230420475348[13] = -nom_x[14] + true_x[14];
   out_4730548230420475348[14] = -nom_x[15] + true_x[15];
   out_4730548230420475348[15] = -nom_x[16] + true_x[16];
   out_4730548230420475348[16] = -nom_x[17] + true_x[17];
   out_4730548230420475348[17] = -nom_x[18] + true_x[18];
   out_4730548230420475348[18] = -nom_x[19] + true_x[19];
   out_4730548230420475348[19] = -nom_x[20] + true_x[20];
   out_4730548230420475348[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5813799317262680088) {
   out_5813799317262680088[0] = 1.0;
   out_5813799317262680088[1] = 0;
   out_5813799317262680088[2] = 0;
   out_5813799317262680088[3] = 0;
   out_5813799317262680088[4] = 0;
   out_5813799317262680088[5] = 0;
   out_5813799317262680088[6] = 0;
   out_5813799317262680088[7] = 0;
   out_5813799317262680088[8] = 0;
   out_5813799317262680088[9] = 0;
   out_5813799317262680088[10] = 0;
   out_5813799317262680088[11] = 0;
   out_5813799317262680088[12] = 0;
   out_5813799317262680088[13] = 0;
   out_5813799317262680088[14] = 0;
   out_5813799317262680088[15] = 0;
   out_5813799317262680088[16] = 0;
   out_5813799317262680088[17] = 0;
   out_5813799317262680088[18] = 0;
   out_5813799317262680088[19] = 0;
   out_5813799317262680088[20] = 0;
   out_5813799317262680088[21] = 0;
   out_5813799317262680088[22] = 1.0;
   out_5813799317262680088[23] = 0;
   out_5813799317262680088[24] = 0;
   out_5813799317262680088[25] = 0;
   out_5813799317262680088[26] = 0;
   out_5813799317262680088[27] = 0;
   out_5813799317262680088[28] = 0;
   out_5813799317262680088[29] = 0;
   out_5813799317262680088[30] = 0;
   out_5813799317262680088[31] = 0;
   out_5813799317262680088[32] = 0;
   out_5813799317262680088[33] = 0;
   out_5813799317262680088[34] = 0;
   out_5813799317262680088[35] = 0;
   out_5813799317262680088[36] = 0;
   out_5813799317262680088[37] = 0;
   out_5813799317262680088[38] = 0;
   out_5813799317262680088[39] = 0;
   out_5813799317262680088[40] = 0;
   out_5813799317262680088[41] = 0;
   out_5813799317262680088[42] = 0;
   out_5813799317262680088[43] = 0;
   out_5813799317262680088[44] = 1.0;
   out_5813799317262680088[45] = 0;
   out_5813799317262680088[46] = 0;
   out_5813799317262680088[47] = 0;
   out_5813799317262680088[48] = 0;
   out_5813799317262680088[49] = 0;
   out_5813799317262680088[50] = 0;
   out_5813799317262680088[51] = 0;
   out_5813799317262680088[52] = 0;
   out_5813799317262680088[53] = 0;
   out_5813799317262680088[54] = 0;
   out_5813799317262680088[55] = 0;
   out_5813799317262680088[56] = 0;
   out_5813799317262680088[57] = 0;
   out_5813799317262680088[58] = 0;
   out_5813799317262680088[59] = 0;
   out_5813799317262680088[60] = 0;
   out_5813799317262680088[61] = 0;
   out_5813799317262680088[62] = 0;
   out_5813799317262680088[63] = 0;
   out_5813799317262680088[64] = 0;
   out_5813799317262680088[65] = 0;
   out_5813799317262680088[66] = -0.5*state[4];
   out_5813799317262680088[67] = -0.5*state[5];
   out_5813799317262680088[68] = -0.5*state[6];
   out_5813799317262680088[69] = 0;
   out_5813799317262680088[70] = 0;
   out_5813799317262680088[71] = 0;
   out_5813799317262680088[72] = 0;
   out_5813799317262680088[73] = 0;
   out_5813799317262680088[74] = 0;
   out_5813799317262680088[75] = 0;
   out_5813799317262680088[76] = 0;
   out_5813799317262680088[77] = 0;
   out_5813799317262680088[78] = 0;
   out_5813799317262680088[79] = 0;
   out_5813799317262680088[80] = 0;
   out_5813799317262680088[81] = 0;
   out_5813799317262680088[82] = 0;
   out_5813799317262680088[83] = 0;
   out_5813799317262680088[84] = 0;
   out_5813799317262680088[85] = 0;
   out_5813799317262680088[86] = 0;
   out_5813799317262680088[87] = 0.5*state[3];
   out_5813799317262680088[88] = 0.5*state[6];
   out_5813799317262680088[89] = -0.5*state[5];
   out_5813799317262680088[90] = 0;
   out_5813799317262680088[91] = 0;
   out_5813799317262680088[92] = 0;
   out_5813799317262680088[93] = 0;
   out_5813799317262680088[94] = 0;
   out_5813799317262680088[95] = 0;
   out_5813799317262680088[96] = 0;
   out_5813799317262680088[97] = 0;
   out_5813799317262680088[98] = 0;
   out_5813799317262680088[99] = 0;
   out_5813799317262680088[100] = 0;
   out_5813799317262680088[101] = 0;
   out_5813799317262680088[102] = 0;
   out_5813799317262680088[103] = 0;
   out_5813799317262680088[104] = 0;
   out_5813799317262680088[105] = 0;
   out_5813799317262680088[106] = 0;
   out_5813799317262680088[107] = 0;
   out_5813799317262680088[108] = -0.5*state[6];
   out_5813799317262680088[109] = 0.5*state[3];
   out_5813799317262680088[110] = 0.5*state[4];
   out_5813799317262680088[111] = 0;
   out_5813799317262680088[112] = 0;
   out_5813799317262680088[113] = 0;
   out_5813799317262680088[114] = 0;
   out_5813799317262680088[115] = 0;
   out_5813799317262680088[116] = 0;
   out_5813799317262680088[117] = 0;
   out_5813799317262680088[118] = 0;
   out_5813799317262680088[119] = 0;
   out_5813799317262680088[120] = 0;
   out_5813799317262680088[121] = 0;
   out_5813799317262680088[122] = 0;
   out_5813799317262680088[123] = 0;
   out_5813799317262680088[124] = 0;
   out_5813799317262680088[125] = 0;
   out_5813799317262680088[126] = 0;
   out_5813799317262680088[127] = 0;
   out_5813799317262680088[128] = 0;
   out_5813799317262680088[129] = 0.5*state[5];
   out_5813799317262680088[130] = -0.5*state[4];
   out_5813799317262680088[131] = 0.5*state[3];
   out_5813799317262680088[132] = 0;
   out_5813799317262680088[133] = 0;
   out_5813799317262680088[134] = 0;
   out_5813799317262680088[135] = 0;
   out_5813799317262680088[136] = 0;
   out_5813799317262680088[137] = 0;
   out_5813799317262680088[138] = 0;
   out_5813799317262680088[139] = 0;
   out_5813799317262680088[140] = 0;
   out_5813799317262680088[141] = 0;
   out_5813799317262680088[142] = 0;
   out_5813799317262680088[143] = 0;
   out_5813799317262680088[144] = 0;
   out_5813799317262680088[145] = 0;
   out_5813799317262680088[146] = 0;
   out_5813799317262680088[147] = 0;
   out_5813799317262680088[148] = 0;
   out_5813799317262680088[149] = 0;
   out_5813799317262680088[150] = 0;
   out_5813799317262680088[151] = 0;
   out_5813799317262680088[152] = 0;
   out_5813799317262680088[153] = 1.0;
   out_5813799317262680088[154] = 0;
   out_5813799317262680088[155] = 0;
   out_5813799317262680088[156] = 0;
   out_5813799317262680088[157] = 0;
   out_5813799317262680088[158] = 0;
   out_5813799317262680088[159] = 0;
   out_5813799317262680088[160] = 0;
   out_5813799317262680088[161] = 0;
   out_5813799317262680088[162] = 0;
   out_5813799317262680088[163] = 0;
   out_5813799317262680088[164] = 0;
   out_5813799317262680088[165] = 0;
   out_5813799317262680088[166] = 0;
   out_5813799317262680088[167] = 0;
   out_5813799317262680088[168] = 0;
   out_5813799317262680088[169] = 0;
   out_5813799317262680088[170] = 0;
   out_5813799317262680088[171] = 0;
   out_5813799317262680088[172] = 0;
   out_5813799317262680088[173] = 0;
   out_5813799317262680088[174] = 0;
   out_5813799317262680088[175] = 1.0;
   out_5813799317262680088[176] = 0;
   out_5813799317262680088[177] = 0;
   out_5813799317262680088[178] = 0;
   out_5813799317262680088[179] = 0;
   out_5813799317262680088[180] = 0;
   out_5813799317262680088[181] = 0;
   out_5813799317262680088[182] = 0;
   out_5813799317262680088[183] = 0;
   out_5813799317262680088[184] = 0;
   out_5813799317262680088[185] = 0;
   out_5813799317262680088[186] = 0;
   out_5813799317262680088[187] = 0;
   out_5813799317262680088[188] = 0;
   out_5813799317262680088[189] = 0;
   out_5813799317262680088[190] = 0;
   out_5813799317262680088[191] = 0;
   out_5813799317262680088[192] = 0;
   out_5813799317262680088[193] = 0;
   out_5813799317262680088[194] = 0;
   out_5813799317262680088[195] = 0;
   out_5813799317262680088[196] = 0;
   out_5813799317262680088[197] = 1.0;
   out_5813799317262680088[198] = 0;
   out_5813799317262680088[199] = 0;
   out_5813799317262680088[200] = 0;
   out_5813799317262680088[201] = 0;
   out_5813799317262680088[202] = 0;
   out_5813799317262680088[203] = 0;
   out_5813799317262680088[204] = 0;
   out_5813799317262680088[205] = 0;
   out_5813799317262680088[206] = 0;
   out_5813799317262680088[207] = 0;
   out_5813799317262680088[208] = 0;
   out_5813799317262680088[209] = 0;
   out_5813799317262680088[210] = 0;
   out_5813799317262680088[211] = 0;
   out_5813799317262680088[212] = 0;
   out_5813799317262680088[213] = 0;
   out_5813799317262680088[214] = 0;
   out_5813799317262680088[215] = 0;
   out_5813799317262680088[216] = 0;
   out_5813799317262680088[217] = 0;
   out_5813799317262680088[218] = 0;
   out_5813799317262680088[219] = 1.0;
   out_5813799317262680088[220] = 0;
   out_5813799317262680088[221] = 0;
   out_5813799317262680088[222] = 0;
   out_5813799317262680088[223] = 0;
   out_5813799317262680088[224] = 0;
   out_5813799317262680088[225] = 0;
   out_5813799317262680088[226] = 0;
   out_5813799317262680088[227] = 0;
   out_5813799317262680088[228] = 0;
   out_5813799317262680088[229] = 0;
   out_5813799317262680088[230] = 0;
   out_5813799317262680088[231] = 0;
   out_5813799317262680088[232] = 0;
   out_5813799317262680088[233] = 0;
   out_5813799317262680088[234] = 0;
   out_5813799317262680088[235] = 0;
   out_5813799317262680088[236] = 0;
   out_5813799317262680088[237] = 0;
   out_5813799317262680088[238] = 0;
   out_5813799317262680088[239] = 0;
   out_5813799317262680088[240] = 0;
   out_5813799317262680088[241] = 1.0;
   out_5813799317262680088[242] = 0;
   out_5813799317262680088[243] = 0;
   out_5813799317262680088[244] = 0;
   out_5813799317262680088[245] = 0;
   out_5813799317262680088[246] = 0;
   out_5813799317262680088[247] = 0;
   out_5813799317262680088[248] = 0;
   out_5813799317262680088[249] = 0;
   out_5813799317262680088[250] = 0;
   out_5813799317262680088[251] = 0;
   out_5813799317262680088[252] = 0;
   out_5813799317262680088[253] = 0;
   out_5813799317262680088[254] = 0;
   out_5813799317262680088[255] = 0;
   out_5813799317262680088[256] = 0;
   out_5813799317262680088[257] = 0;
   out_5813799317262680088[258] = 0;
   out_5813799317262680088[259] = 0;
   out_5813799317262680088[260] = 0;
   out_5813799317262680088[261] = 0;
   out_5813799317262680088[262] = 0;
   out_5813799317262680088[263] = 1.0;
   out_5813799317262680088[264] = 0;
   out_5813799317262680088[265] = 0;
   out_5813799317262680088[266] = 0;
   out_5813799317262680088[267] = 0;
   out_5813799317262680088[268] = 0;
   out_5813799317262680088[269] = 0;
   out_5813799317262680088[270] = 0;
   out_5813799317262680088[271] = 0;
   out_5813799317262680088[272] = 0;
   out_5813799317262680088[273] = 0;
   out_5813799317262680088[274] = 0;
   out_5813799317262680088[275] = 0;
   out_5813799317262680088[276] = 0;
   out_5813799317262680088[277] = 0;
   out_5813799317262680088[278] = 0;
   out_5813799317262680088[279] = 0;
   out_5813799317262680088[280] = 0;
   out_5813799317262680088[281] = 0;
   out_5813799317262680088[282] = 0;
   out_5813799317262680088[283] = 0;
   out_5813799317262680088[284] = 0;
   out_5813799317262680088[285] = 1.0;
   out_5813799317262680088[286] = 0;
   out_5813799317262680088[287] = 0;
   out_5813799317262680088[288] = 0;
   out_5813799317262680088[289] = 0;
   out_5813799317262680088[290] = 0;
   out_5813799317262680088[291] = 0;
   out_5813799317262680088[292] = 0;
   out_5813799317262680088[293] = 0;
   out_5813799317262680088[294] = 0;
   out_5813799317262680088[295] = 0;
   out_5813799317262680088[296] = 0;
   out_5813799317262680088[297] = 0;
   out_5813799317262680088[298] = 0;
   out_5813799317262680088[299] = 0;
   out_5813799317262680088[300] = 0;
   out_5813799317262680088[301] = 0;
   out_5813799317262680088[302] = 0;
   out_5813799317262680088[303] = 0;
   out_5813799317262680088[304] = 0;
   out_5813799317262680088[305] = 0;
   out_5813799317262680088[306] = 0;
   out_5813799317262680088[307] = 1.0;
   out_5813799317262680088[308] = 0;
   out_5813799317262680088[309] = 0;
   out_5813799317262680088[310] = 0;
   out_5813799317262680088[311] = 0;
   out_5813799317262680088[312] = 0;
   out_5813799317262680088[313] = 0;
   out_5813799317262680088[314] = 0;
   out_5813799317262680088[315] = 0;
   out_5813799317262680088[316] = 0;
   out_5813799317262680088[317] = 0;
   out_5813799317262680088[318] = 0;
   out_5813799317262680088[319] = 0;
   out_5813799317262680088[320] = 0;
   out_5813799317262680088[321] = 0;
   out_5813799317262680088[322] = 0;
   out_5813799317262680088[323] = 0;
   out_5813799317262680088[324] = 0;
   out_5813799317262680088[325] = 0;
   out_5813799317262680088[326] = 0;
   out_5813799317262680088[327] = 0;
   out_5813799317262680088[328] = 0;
   out_5813799317262680088[329] = 1.0;
   out_5813799317262680088[330] = 0;
   out_5813799317262680088[331] = 0;
   out_5813799317262680088[332] = 0;
   out_5813799317262680088[333] = 0;
   out_5813799317262680088[334] = 0;
   out_5813799317262680088[335] = 0;
   out_5813799317262680088[336] = 0;
   out_5813799317262680088[337] = 0;
   out_5813799317262680088[338] = 0;
   out_5813799317262680088[339] = 0;
   out_5813799317262680088[340] = 0;
   out_5813799317262680088[341] = 0;
   out_5813799317262680088[342] = 0;
   out_5813799317262680088[343] = 0;
   out_5813799317262680088[344] = 0;
   out_5813799317262680088[345] = 0;
   out_5813799317262680088[346] = 0;
   out_5813799317262680088[347] = 0;
   out_5813799317262680088[348] = 0;
   out_5813799317262680088[349] = 0;
   out_5813799317262680088[350] = 0;
   out_5813799317262680088[351] = 1.0;
   out_5813799317262680088[352] = 0;
   out_5813799317262680088[353] = 0;
   out_5813799317262680088[354] = 0;
   out_5813799317262680088[355] = 0;
   out_5813799317262680088[356] = 0;
   out_5813799317262680088[357] = 0;
   out_5813799317262680088[358] = 0;
   out_5813799317262680088[359] = 0;
   out_5813799317262680088[360] = 0;
   out_5813799317262680088[361] = 0;
   out_5813799317262680088[362] = 0;
   out_5813799317262680088[363] = 0;
   out_5813799317262680088[364] = 0;
   out_5813799317262680088[365] = 0;
   out_5813799317262680088[366] = 0;
   out_5813799317262680088[367] = 0;
   out_5813799317262680088[368] = 0;
   out_5813799317262680088[369] = 0;
   out_5813799317262680088[370] = 0;
   out_5813799317262680088[371] = 0;
   out_5813799317262680088[372] = 0;
   out_5813799317262680088[373] = 1.0;
   out_5813799317262680088[374] = 0;
   out_5813799317262680088[375] = 0;
   out_5813799317262680088[376] = 0;
   out_5813799317262680088[377] = 0;
   out_5813799317262680088[378] = 0;
   out_5813799317262680088[379] = 0;
   out_5813799317262680088[380] = 0;
   out_5813799317262680088[381] = 0;
   out_5813799317262680088[382] = 0;
   out_5813799317262680088[383] = 0;
   out_5813799317262680088[384] = 0;
   out_5813799317262680088[385] = 0;
   out_5813799317262680088[386] = 0;
   out_5813799317262680088[387] = 0;
   out_5813799317262680088[388] = 0;
   out_5813799317262680088[389] = 0;
   out_5813799317262680088[390] = 0;
   out_5813799317262680088[391] = 0;
   out_5813799317262680088[392] = 0;
   out_5813799317262680088[393] = 0;
   out_5813799317262680088[394] = 0;
   out_5813799317262680088[395] = 1.0;
   out_5813799317262680088[396] = 0;
   out_5813799317262680088[397] = 0;
   out_5813799317262680088[398] = 0;
   out_5813799317262680088[399] = 0;
   out_5813799317262680088[400] = 0;
   out_5813799317262680088[401] = 0;
   out_5813799317262680088[402] = 0;
   out_5813799317262680088[403] = 0;
   out_5813799317262680088[404] = 0;
   out_5813799317262680088[405] = 0;
   out_5813799317262680088[406] = 0;
   out_5813799317262680088[407] = 0;
   out_5813799317262680088[408] = 0;
   out_5813799317262680088[409] = 0;
   out_5813799317262680088[410] = 0;
   out_5813799317262680088[411] = 0;
   out_5813799317262680088[412] = 0;
   out_5813799317262680088[413] = 0;
   out_5813799317262680088[414] = 0;
   out_5813799317262680088[415] = 0;
   out_5813799317262680088[416] = 0;
   out_5813799317262680088[417] = 1.0;
   out_5813799317262680088[418] = 0;
   out_5813799317262680088[419] = 0;
   out_5813799317262680088[420] = 0;
   out_5813799317262680088[421] = 0;
   out_5813799317262680088[422] = 0;
   out_5813799317262680088[423] = 0;
   out_5813799317262680088[424] = 0;
   out_5813799317262680088[425] = 0;
   out_5813799317262680088[426] = 0;
   out_5813799317262680088[427] = 0;
   out_5813799317262680088[428] = 0;
   out_5813799317262680088[429] = 0;
   out_5813799317262680088[430] = 0;
   out_5813799317262680088[431] = 0;
   out_5813799317262680088[432] = 0;
   out_5813799317262680088[433] = 0;
   out_5813799317262680088[434] = 0;
   out_5813799317262680088[435] = 0;
   out_5813799317262680088[436] = 0;
   out_5813799317262680088[437] = 0;
   out_5813799317262680088[438] = 0;
   out_5813799317262680088[439] = 1.0;
   out_5813799317262680088[440] = 0;
   out_5813799317262680088[441] = 0;
   out_5813799317262680088[442] = 0;
   out_5813799317262680088[443] = 0;
   out_5813799317262680088[444] = 0;
   out_5813799317262680088[445] = 0;
   out_5813799317262680088[446] = 0;
   out_5813799317262680088[447] = 0;
   out_5813799317262680088[448] = 0;
   out_5813799317262680088[449] = 0;
   out_5813799317262680088[450] = 0;
   out_5813799317262680088[451] = 0;
   out_5813799317262680088[452] = 0;
   out_5813799317262680088[453] = 0;
   out_5813799317262680088[454] = 0;
   out_5813799317262680088[455] = 0;
   out_5813799317262680088[456] = 0;
   out_5813799317262680088[457] = 0;
   out_5813799317262680088[458] = 0;
   out_5813799317262680088[459] = 0;
   out_5813799317262680088[460] = 0;
   out_5813799317262680088[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8261305250467109423) {
   out_8261305250467109423[0] = dt*state[7] + state[0];
   out_8261305250467109423[1] = dt*state[8] + state[1];
   out_8261305250467109423[2] = dt*state[9] + state[2];
   out_8261305250467109423[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8261305250467109423[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8261305250467109423[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8261305250467109423[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8261305250467109423[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8261305250467109423[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8261305250467109423[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8261305250467109423[10] = state[10];
   out_8261305250467109423[11] = state[11];
   out_8261305250467109423[12] = state[12];
   out_8261305250467109423[13] = state[13];
   out_8261305250467109423[14] = state[14];
   out_8261305250467109423[15] = state[15];
   out_8261305250467109423[16] = state[16];
   out_8261305250467109423[17] = state[17];
   out_8261305250467109423[18] = state[18];
   out_8261305250467109423[19] = state[19];
   out_8261305250467109423[20] = state[20];
   out_8261305250467109423[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7969107683281141771) {
   out_7969107683281141771[0] = 1;
   out_7969107683281141771[1] = 0;
   out_7969107683281141771[2] = 0;
   out_7969107683281141771[3] = 0;
   out_7969107683281141771[4] = 0;
   out_7969107683281141771[5] = 0;
   out_7969107683281141771[6] = dt;
   out_7969107683281141771[7] = 0;
   out_7969107683281141771[8] = 0;
   out_7969107683281141771[9] = 0;
   out_7969107683281141771[10] = 0;
   out_7969107683281141771[11] = 0;
   out_7969107683281141771[12] = 0;
   out_7969107683281141771[13] = 0;
   out_7969107683281141771[14] = 0;
   out_7969107683281141771[15] = 0;
   out_7969107683281141771[16] = 0;
   out_7969107683281141771[17] = 0;
   out_7969107683281141771[18] = 0;
   out_7969107683281141771[19] = 0;
   out_7969107683281141771[20] = 0;
   out_7969107683281141771[21] = 0;
   out_7969107683281141771[22] = 1;
   out_7969107683281141771[23] = 0;
   out_7969107683281141771[24] = 0;
   out_7969107683281141771[25] = 0;
   out_7969107683281141771[26] = 0;
   out_7969107683281141771[27] = 0;
   out_7969107683281141771[28] = dt;
   out_7969107683281141771[29] = 0;
   out_7969107683281141771[30] = 0;
   out_7969107683281141771[31] = 0;
   out_7969107683281141771[32] = 0;
   out_7969107683281141771[33] = 0;
   out_7969107683281141771[34] = 0;
   out_7969107683281141771[35] = 0;
   out_7969107683281141771[36] = 0;
   out_7969107683281141771[37] = 0;
   out_7969107683281141771[38] = 0;
   out_7969107683281141771[39] = 0;
   out_7969107683281141771[40] = 0;
   out_7969107683281141771[41] = 0;
   out_7969107683281141771[42] = 0;
   out_7969107683281141771[43] = 0;
   out_7969107683281141771[44] = 1;
   out_7969107683281141771[45] = 0;
   out_7969107683281141771[46] = 0;
   out_7969107683281141771[47] = 0;
   out_7969107683281141771[48] = 0;
   out_7969107683281141771[49] = 0;
   out_7969107683281141771[50] = dt;
   out_7969107683281141771[51] = 0;
   out_7969107683281141771[52] = 0;
   out_7969107683281141771[53] = 0;
   out_7969107683281141771[54] = 0;
   out_7969107683281141771[55] = 0;
   out_7969107683281141771[56] = 0;
   out_7969107683281141771[57] = 0;
   out_7969107683281141771[58] = 0;
   out_7969107683281141771[59] = 0;
   out_7969107683281141771[60] = 0;
   out_7969107683281141771[61] = 0;
   out_7969107683281141771[62] = 0;
   out_7969107683281141771[63] = 0;
   out_7969107683281141771[64] = 0;
   out_7969107683281141771[65] = 0;
   out_7969107683281141771[66] = 1;
   out_7969107683281141771[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7969107683281141771[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7969107683281141771[69] = 0;
   out_7969107683281141771[70] = 0;
   out_7969107683281141771[71] = 0;
   out_7969107683281141771[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7969107683281141771[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7969107683281141771[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7969107683281141771[75] = 0;
   out_7969107683281141771[76] = 0;
   out_7969107683281141771[77] = 0;
   out_7969107683281141771[78] = 0;
   out_7969107683281141771[79] = 0;
   out_7969107683281141771[80] = 0;
   out_7969107683281141771[81] = 0;
   out_7969107683281141771[82] = 0;
   out_7969107683281141771[83] = 0;
   out_7969107683281141771[84] = 0;
   out_7969107683281141771[85] = 0;
   out_7969107683281141771[86] = 0;
   out_7969107683281141771[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7969107683281141771[88] = 1;
   out_7969107683281141771[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7969107683281141771[90] = 0;
   out_7969107683281141771[91] = 0;
   out_7969107683281141771[92] = 0;
   out_7969107683281141771[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7969107683281141771[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7969107683281141771[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7969107683281141771[96] = 0;
   out_7969107683281141771[97] = 0;
   out_7969107683281141771[98] = 0;
   out_7969107683281141771[99] = 0;
   out_7969107683281141771[100] = 0;
   out_7969107683281141771[101] = 0;
   out_7969107683281141771[102] = 0;
   out_7969107683281141771[103] = 0;
   out_7969107683281141771[104] = 0;
   out_7969107683281141771[105] = 0;
   out_7969107683281141771[106] = 0;
   out_7969107683281141771[107] = 0;
   out_7969107683281141771[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7969107683281141771[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7969107683281141771[110] = 1;
   out_7969107683281141771[111] = 0;
   out_7969107683281141771[112] = 0;
   out_7969107683281141771[113] = 0;
   out_7969107683281141771[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7969107683281141771[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7969107683281141771[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7969107683281141771[117] = 0;
   out_7969107683281141771[118] = 0;
   out_7969107683281141771[119] = 0;
   out_7969107683281141771[120] = 0;
   out_7969107683281141771[121] = 0;
   out_7969107683281141771[122] = 0;
   out_7969107683281141771[123] = 0;
   out_7969107683281141771[124] = 0;
   out_7969107683281141771[125] = 0;
   out_7969107683281141771[126] = 0;
   out_7969107683281141771[127] = 0;
   out_7969107683281141771[128] = 0;
   out_7969107683281141771[129] = 0;
   out_7969107683281141771[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7969107683281141771[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7969107683281141771[132] = 1;
   out_7969107683281141771[133] = 0;
   out_7969107683281141771[134] = 0;
   out_7969107683281141771[135] = 0;
   out_7969107683281141771[136] = 0;
   out_7969107683281141771[137] = 0;
   out_7969107683281141771[138] = 0;
   out_7969107683281141771[139] = 0;
   out_7969107683281141771[140] = 0;
   out_7969107683281141771[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7969107683281141771[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7969107683281141771[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7969107683281141771[144] = 0;
   out_7969107683281141771[145] = 0;
   out_7969107683281141771[146] = 0;
   out_7969107683281141771[147] = 0;
   out_7969107683281141771[148] = 0;
   out_7969107683281141771[149] = 0;
   out_7969107683281141771[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7969107683281141771[151] = 0;
   out_7969107683281141771[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7969107683281141771[153] = 0;
   out_7969107683281141771[154] = 1;
   out_7969107683281141771[155] = 0;
   out_7969107683281141771[156] = 0;
   out_7969107683281141771[157] = 0;
   out_7969107683281141771[158] = 0;
   out_7969107683281141771[159] = 0;
   out_7969107683281141771[160] = 0;
   out_7969107683281141771[161] = 0;
   out_7969107683281141771[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7969107683281141771[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7969107683281141771[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7969107683281141771[165] = 0;
   out_7969107683281141771[166] = 0;
   out_7969107683281141771[167] = 0;
   out_7969107683281141771[168] = 0;
   out_7969107683281141771[169] = 0;
   out_7969107683281141771[170] = 0;
   out_7969107683281141771[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7969107683281141771[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7969107683281141771[173] = 0;
   out_7969107683281141771[174] = 0;
   out_7969107683281141771[175] = 0;
   out_7969107683281141771[176] = 1;
   out_7969107683281141771[177] = 0;
   out_7969107683281141771[178] = 0;
   out_7969107683281141771[179] = 0;
   out_7969107683281141771[180] = 0;
   out_7969107683281141771[181] = 0;
   out_7969107683281141771[182] = 0;
   out_7969107683281141771[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7969107683281141771[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7969107683281141771[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7969107683281141771[186] = 0;
   out_7969107683281141771[187] = 0;
   out_7969107683281141771[188] = 0;
   out_7969107683281141771[189] = 0;
   out_7969107683281141771[190] = 0;
   out_7969107683281141771[191] = 0;
   out_7969107683281141771[192] = 0;
   out_7969107683281141771[193] = 0;
   out_7969107683281141771[194] = 0;
   out_7969107683281141771[195] = 0;
   out_7969107683281141771[196] = 0;
   out_7969107683281141771[197] = 0;
   out_7969107683281141771[198] = 1;
   out_7969107683281141771[199] = 0;
   out_7969107683281141771[200] = 0;
   out_7969107683281141771[201] = 0;
   out_7969107683281141771[202] = 0;
   out_7969107683281141771[203] = 0;
   out_7969107683281141771[204] = 0;
   out_7969107683281141771[205] = 0;
   out_7969107683281141771[206] = 0;
   out_7969107683281141771[207] = 0;
   out_7969107683281141771[208] = 0;
   out_7969107683281141771[209] = 0;
   out_7969107683281141771[210] = 0;
   out_7969107683281141771[211] = 0;
   out_7969107683281141771[212] = 0;
   out_7969107683281141771[213] = 0;
   out_7969107683281141771[214] = 0;
   out_7969107683281141771[215] = 0;
   out_7969107683281141771[216] = 0;
   out_7969107683281141771[217] = 0;
   out_7969107683281141771[218] = 0;
   out_7969107683281141771[219] = 0;
   out_7969107683281141771[220] = 1;
   out_7969107683281141771[221] = 0;
   out_7969107683281141771[222] = 0;
   out_7969107683281141771[223] = 0;
   out_7969107683281141771[224] = 0;
   out_7969107683281141771[225] = 0;
   out_7969107683281141771[226] = 0;
   out_7969107683281141771[227] = 0;
   out_7969107683281141771[228] = 0;
   out_7969107683281141771[229] = 0;
   out_7969107683281141771[230] = 0;
   out_7969107683281141771[231] = 0;
   out_7969107683281141771[232] = 0;
   out_7969107683281141771[233] = 0;
   out_7969107683281141771[234] = 0;
   out_7969107683281141771[235] = 0;
   out_7969107683281141771[236] = 0;
   out_7969107683281141771[237] = 0;
   out_7969107683281141771[238] = 0;
   out_7969107683281141771[239] = 0;
   out_7969107683281141771[240] = 0;
   out_7969107683281141771[241] = 0;
   out_7969107683281141771[242] = 1;
   out_7969107683281141771[243] = 0;
   out_7969107683281141771[244] = 0;
   out_7969107683281141771[245] = 0;
   out_7969107683281141771[246] = 0;
   out_7969107683281141771[247] = 0;
   out_7969107683281141771[248] = 0;
   out_7969107683281141771[249] = 0;
   out_7969107683281141771[250] = 0;
   out_7969107683281141771[251] = 0;
   out_7969107683281141771[252] = 0;
   out_7969107683281141771[253] = 0;
   out_7969107683281141771[254] = 0;
   out_7969107683281141771[255] = 0;
   out_7969107683281141771[256] = 0;
   out_7969107683281141771[257] = 0;
   out_7969107683281141771[258] = 0;
   out_7969107683281141771[259] = 0;
   out_7969107683281141771[260] = 0;
   out_7969107683281141771[261] = 0;
   out_7969107683281141771[262] = 0;
   out_7969107683281141771[263] = 0;
   out_7969107683281141771[264] = 1;
   out_7969107683281141771[265] = 0;
   out_7969107683281141771[266] = 0;
   out_7969107683281141771[267] = 0;
   out_7969107683281141771[268] = 0;
   out_7969107683281141771[269] = 0;
   out_7969107683281141771[270] = 0;
   out_7969107683281141771[271] = 0;
   out_7969107683281141771[272] = 0;
   out_7969107683281141771[273] = 0;
   out_7969107683281141771[274] = 0;
   out_7969107683281141771[275] = 0;
   out_7969107683281141771[276] = 0;
   out_7969107683281141771[277] = 0;
   out_7969107683281141771[278] = 0;
   out_7969107683281141771[279] = 0;
   out_7969107683281141771[280] = 0;
   out_7969107683281141771[281] = 0;
   out_7969107683281141771[282] = 0;
   out_7969107683281141771[283] = 0;
   out_7969107683281141771[284] = 0;
   out_7969107683281141771[285] = 0;
   out_7969107683281141771[286] = 1;
   out_7969107683281141771[287] = 0;
   out_7969107683281141771[288] = 0;
   out_7969107683281141771[289] = 0;
   out_7969107683281141771[290] = 0;
   out_7969107683281141771[291] = 0;
   out_7969107683281141771[292] = 0;
   out_7969107683281141771[293] = 0;
   out_7969107683281141771[294] = 0;
   out_7969107683281141771[295] = 0;
   out_7969107683281141771[296] = 0;
   out_7969107683281141771[297] = 0;
   out_7969107683281141771[298] = 0;
   out_7969107683281141771[299] = 0;
   out_7969107683281141771[300] = 0;
   out_7969107683281141771[301] = 0;
   out_7969107683281141771[302] = 0;
   out_7969107683281141771[303] = 0;
   out_7969107683281141771[304] = 0;
   out_7969107683281141771[305] = 0;
   out_7969107683281141771[306] = 0;
   out_7969107683281141771[307] = 0;
   out_7969107683281141771[308] = 1;
   out_7969107683281141771[309] = 0;
   out_7969107683281141771[310] = 0;
   out_7969107683281141771[311] = 0;
   out_7969107683281141771[312] = 0;
   out_7969107683281141771[313] = 0;
   out_7969107683281141771[314] = 0;
   out_7969107683281141771[315] = 0;
   out_7969107683281141771[316] = 0;
   out_7969107683281141771[317] = 0;
   out_7969107683281141771[318] = 0;
   out_7969107683281141771[319] = 0;
   out_7969107683281141771[320] = 0;
   out_7969107683281141771[321] = 0;
   out_7969107683281141771[322] = 0;
   out_7969107683281141771[323] = 0;
   out_7969107683281141771[324] = 0;
   out_7969107683281141771[325] = 0;
   out_7969107683281141771[326] = 0;
   out_7969107683281141771[327] = 0;
   out_7969107683281141771[328] = 0;
   out_7969107683281141771[329] = 0;
   out_7969107683281141771[330] = 1;
   out_7969107683281141771[331] = 0;
   out_7969107683281141771[332] = 0;
   out_7969107683281141771[333] = 0;
   out_7969107683281141771[334] = 0;
   out_7969107683281141771[335] = 0;
   out_7969107683281141771[336] = 0;
   out_7969107683281141771[337] = 0;
   out_7969107683281141771[338] = 0;
   out_7969107683281141771[339] = 0;
   out_7969107683281141771[340] = 0;
   out_7969107683281141771[341] = 0;
   out_7969107683281141771[342] = 0;
   out_7969107683281141771[343] = 0;
   out_7969107683281141771[344] = 0;
   out_7969107683281141771[345] = 0;
   out_7969107683281141771[346] = 0;
   out_7969107683281141771[347] = 0;
   out_7969107683281141771[348] = 0;
   out_7969107683281141771[349] = 0;
   out_7969107683281141771[350] = 0;
   out_7969107683281141771[351] = 0;
   out_7969107683281141771[352] = 1;
   out_7969107683281141771[353] = 0;
   out_7969107683281141771[354] = 0;
   out_7969107683281141771[355] = 0;
   out_7969107683281141771[356] = 0;
   out_7969107683281141771[357] = 0;
   out_7969107683281141771[358] = 0;
   out_7969107683281141771[359] = 0;
   out_7969107683281141771[360] = 0;
   out_7969107683281141771[361] = 0;
   out_7969107683281141771[362] = 0;
   out_7969107683281141771[363] = 0;
   out_7969107683281141771[364] = 0;
   out_7969107683281141771[365] = 0;
   out_7969107683281141771[366] = 0;
   out_7969107683281141771[367] = 0;
   out_7969107683281141771[368] = 0;
   out_7969107683281141771[369] = 0;
   out_7969107683281141771[370] = 0;
   out_7969107683281141771[371] = 0;
   out_7969107683281141771[372] = 0;
   out_7969107683281141771[373] = 0;
   out_7969107683281141771[374] = 1;
   out_7969107683281141771[375] = 0;
   out_7969107683281141771[376] = 0;
   out_7969107683281141771[377] = 0;
   out_7969107683281141771[378] = 0;
   out_7969107683281141771[379] = 0;
   out_7969107683281141771[380] = 0;
   out_7969107683281141771[381] = 0;
   out_7969107683281141771[382] = 0;
   out_7969107683281141771[383] = 0;
   out_7969107683281141771[384] = 0;
   out_7969107683281141771[385] = 0;
   out_7969107683281141771[386] = 0;
   out_7969107683281141771[387] = 0;
   out_7969107683281141771[388] = 0;
   out_7969107683281141771[389] = 0;
   out_7969107683281141771[390] = 0;
   out_7969107683281141771[391] = 0;
   out_7969107683281141771[392] = 0;
   out_7969107683281141771[393] = 0;
   out_7969107683281141771[394] = 0;
   out_7969107683281141771[395] = 0;
   out_7969107683281141771[396] = 1;
   out_7969107683281141771[397] = 0;
   out_7969107683281141771[398] = 0;
   out_7969107683281141771[399] = 0;
   out_7969107683281141771[400] = 0;
   out_7969107683281141771[401] = 0;
   out_7969107683281141771[402] = 0;
   out_7969107683281141771[403] = 0;
   out_7969107683281141771[404] = 0;
   out_7969107683281141771[405] = 0;
   out_7969107683281141771[406] = 0;
   out_7969107683281141771[407] = 0;
   out_7969107683281141771[408] = 0;
   out_7969107683281141771[409] = 0;
   out_7969107683281141771[410] = 0;
   out_7969107683281141771[411] = 0;
   out_7969107683281141771[412] = 0;
   out_7969107683281141771[413] = 0;
   out_7969107683281141771[414] = 0;
   out_7969107683281141771[415] = 0;
   out_7969107683281141771[416] = 0;
   out_7969107683281141771[417] = 0;
   out_7969107683281141771[418] = 1;
   out_7969107683281141771[419] = 0;
   out_7969107683281141771[420] = 0;
   out_7969107683281141771[421] = 0;
   out_7969107683281141771[422] = 0;
   out_7969107683281141771[423] = 0;
   out_7969107683281141771[424] = 0;
   out_7969107683281141771[425] = 0;
   out_7969107683281141771[426] = 0;
   out_7969107683281141771[427] = 0;
   out_7969107683281141771[428] = 0;
   out_7969107683281141771[429] = 0;
   out_7969107683281141771[430] = 0;
   out_7969107683281141771[431] = 0;
   out_7969107683281141771[432] = 0;
   out_7969107683281141771[433] = 0;
   out_7969107683281141771[434] = 0;
   out_7969107683281141771[435] = 0;
   out_7969107683281141771[436] = 0;
   out_7969107683281141771[437] = 0;
   out_7969107683281141771[438] = 0;
   out_7969107683281141771[439] = 0;
   out_7969107683281141771[440] = 1;
}
void h_4(double *state, double *unused, double *out_19229563063502244) {
   out_19229563063502244[0] = state[10] + state[13];
   out_19229563063502244[1] = state[11] + state[14];
   out_19229563063502244[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7119898973221844350) {
   out_7119898973221844350[0] = 0;
   out_7119898973221844350[1] = 0;
   out_7119898973221844350[2] = 0;
   out_7119898973221844350[3] = 0;
   out_7119898973221844350[4] = 0;
   out_7119898973221844350[5] = 0;
   out_7119898973221844350[6] = 0;
   out_7119898973221844350[7] = 0;
   out_7119898973221844350[8] = 0;
   out_7119898973221844350[9] = 0;
   out_7119898973221844350[10] = 1;
   out_7119898973221844350[11] = 0;
   out_7119898973221844350[12] = 0;
   out_7119898973221844350[13] = 1;
   out_7119898973221844350[14] = 0;
   out_7119898973221844350[15] = 0;
   out_7119898973221844350[16] = 0;
   out_7119898973221844350[17] = 0;
   out_7119898973221844350[18] = 0;
   out_7119898973221844350[19] = 0;
   out_7119898973221844350[20] = 0;
   out_7119898973221844350[21] = 0;
   out_7119898973221844350[22] = 0;
   out_7119898973221844350[23] = 0;
   out_7119898973221844350[24] = 0;
   out_7119898973221844350[25] = 0;
   out_7119898973221844350[26] = 0;
   out_7119898973221844350[27] = 0;
   out_7119898973221844350[28] = 0;
   out_7119898973221844350[29] = 0;
   out_7119898973221844350[30] = 0;
   out_7119898973221844350[31] = 0;
   out_7119898973221844350[32] = 0;
   out_7119898973221844350[33] = 1;
   out_7119898973221844350[34] = 0;
   out_7119898973221844350[35] = 0;
   out_7119898973221844350[36] = 1;
   out_7119898973221844350[37] = 0;
   out_7119898973221844350[38] = 0;
   out_7119898973221844350[39] = 0;
   out_7119898973221844350[40] = 0;
   out_7119898973221844350[41] = 0;
   out_7119898973221844350[42] = 0;
   out_7119898973221844350[43] = 0;
   out_7119898973221844350[44] = 0;
   out_7119898973221844350[45] = 0;
   out_7119898973221844350[46] = 0;
   out_7119898973221844350[47] = 0;
   out_7119898973221844350[48] = 0;
   out_7119898973221844350[49] = 0;
   out_7119898973221844350[50] = 0;
   out_7119898973221844350[51] = 0;
   out_7119898973221844350[52] = 0;
   out_7119898973221844350[53] = 0;
   out_7119898973221844350[54] = 0;
   out_7119898973221844350[55] = 0;
   out_7119898973221844350[56] = 1;
   out_7119898973221844350[57] = 0;
   out_7119898973221844350[58] = 0;
   out_7119898973221844350[59] = 1;
   out_7119898973221844350[60] = 0;
   out_7119898973221844350[61] = 0;
   out_7119898973221844350[62] = 0;
   out_7119898973221844350[63] = 0;
   out_7119898973221844350[64] = 0;
   out_7119898973221844350[65] = 0;
}
void h_9(double *state, double *unused, double *out_5405768222819323892) {
   out_5405768222819323892[0] = state[10];
   out_5405768222819323892[1] = state[11];
   out_5405768222819323892[2] = state[12];
}
void H_9(double *state, double *unused, double *out_167319962042603120) {
   out_167319962042603120[0] = 0;
   out_167319962042603120[1] = 0;
   out_167319962042603120[2] = 0;
   out_167319962042603120[3] = 0;
   out_167319962042603120[4] = 0;
   out_167319962042603120[5] = 0;
   out_167319962042603120[6] = 0;
   out_167319962042603120[7] = 0;
   out_167319962042603120[8] = 0;
   out_167319962042603120[9] = 0;
   out_167319962042603120[10] = 1;
   out_167319962042603120[11] = 0;
   out_167319962042603120[12] = 0;
   out_167319962042603120[13] = 0;
   out_167319962042603120[14] = 0;
   out_167319962042603120[15] = 0;
   out_167319962042603120[16] = 0;
   out_167319962042603120[17] = 0;
   out_167319962042603120[18] = 0;
   out_167319962042603120[19] = 0;
   out_167319962042603120[20] = 0;
   out_167319962042603120[21] = 0;
   out_167319962042603120[22] = 0;
   out_167319962042603120[23] = 0;
   out_167319962042603120[24] = 0;
   out_167319962042603120[25] = 0;
   out_167319962042603120[26] = 0;
   out_167319962042603120[27] = 0;
   out_167319962042603120[28] = 0;
   out_167319962042603120[29] = 0;
   out_167319962042603120[30] = 0;
   out_167319962042603120[31] = 0;
   out_167319962042603120[32] = 0;
   out_167319962042603120[33] = 1;
   out_167319962042603120[34] = 0;
   out_167319962042603120[35] = 0;
   out_167319962042603120[36] = 0;
   out_167319962042603120[37] = 0;
   out_167319962042603120[38] = 0;
   out_167319962042603120[39] = 0;
   out_167319962042603120[40] = 0;
   out_167319962042603120[41] = 0;
   out_167319962042603120[42] = 0;
   out_167319962042603120[43] = 0;
   out_167319962042603120[44] = 0;
   out_167319962042603120[45] = 0;
   out_167319962042603120[46] = 0;
   out_167319962042603120[47] = 0;
   out_167319962042603120[48] = 0;
   out_167319962042603120[49] = 0;
   out_167319962042603120[50] = 0;
   out_167319962042603120[51] = 0;
   out_167319962042603120[52] = 0;
   out_167319962042603120[53] = 0;
   out_167319962042603120[54] = 0;
   out_167319962042603120[55] = 0;
   out_167319962042603120[56] = 1;
   out_167319962042603120[57] = 0;
   out_167319962042603120[58] = 0;
   out_167319962042603120[59] = 0;
   out_167319962042603120[60] = 0;
   out_167319962042603120[61] = 0;
   out_167319962042603120[62] = 0;
   out_167319962042603120[63] = 0;
   out_167319962042603120[64] = 0;
   out_167319962042603120[65] = 0;
}
void h_10(double *state, double *unused, double *out_7122991885274472666) {
   out_7122991885274472666[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7122991885274472666[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7122991885274472666[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8001066680165645977) {
   out_8001066680165645977[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8001066680165645977[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8001066680165645977[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8001066680165645977[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8001066680165645977[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8001066680165645977[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8001066680165645977[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8001066680165645977[7] = 0;
   out_8001066680165645977[8] = 0;
   out_8001066680165645977[9] = 0;
   out_8001066680165645977[10] = 0;
   out_8001066680165645977[11] = 0;
   out_8001066680165645977[12] = 0;
   out_8001066680165645977[13] = 0;
   out_8001066680165645977[14] = 0;
   out_8001066680165645977[15] = 0;
   out_8001066680165645977[16] = 1;
   out_8001066680165645977[17] = 0;
   out_8001066680165645977[18] = 0;
   out_8001066680165645977[19] = 1;
   out_8001066680165645977[20] = 0;
   out_8001066680165645977[21] = 0;
   out_8001066680165645977[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8001066680165645977[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8001066680165645977[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8001066680165645977[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8001066680165645977[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8001066680165645977[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8001066680165645977[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8001066680165645977[29] = 0;
   out_8001066680165645977[30] = 0;
   out_8001066680165645977[31] = 0;
   out_8001066680165645977[32] = 0;
   out_8001066680165645977[33] = 0;
   out_8001066680165645977[34] = 0;
   out_8001066680165645977[35] = 0;
   out_8001066680165645977[36] = 0;
   out_8001066680165645977[37] = 0;
   out_8001066680165645977[38] = 0;
   out_8001066680165645977[39] = 1;
   out_8001066680165645977[40] = 0;
   out_8001066680165645977[41] = 0;
   out_8001066680165645977[42] = 1;
   out_8001066680165645977[43] = 0;
   out_8001066680165645977[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8001066680165645977[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8001066680165645977[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8001066680165645977[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8001066680165645977[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8001066680165645977[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8001066680165645977[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8001066680165645977[51] = 0;
   out_8001066680165645977[52] = 0;
   out_8001066680165645977[53] = 0;
   out_8001066680165645977[54] = 0;
   out_8001066680165645977[55] = 0;
   out_8001066680165645977[56] = 0;
   out_8001066680165645977[57] = 0;
   out_8001066680165645977[58] = 0;
   out_8001066680165645977[59] = 0;
   out_8001066680165645977[60] = 0;
   out_8001066680165645977[61] = 0;
   out_8001066680165645977[62] = 1;
   out_8001066680165645977[63] = 0;
   out_8001066680165645977[64] = 0;
   out_8001066680165645977[65] = 1;
}
void h_12(double *state, double *unused, double *out_7324409554195996501) {
   out_7324409554195996501[0] = state[0];
   out_7324409554195996501[1] = state[1];
   out_7324409554195996501[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4945586723444974270) {
   out_4945586723444974270[0] = 1;
   out_4945586723444974270[1] = 0;
   out_4945586723444974270[2] = 0;
   out_4945586723444974270[3] = 0;
   out_4945586723444974270[4] = 0;
   out_4945586723444974270[5] = 0;
   out_4945586723444974270[6] = 0;
   out_4945586723444974270[7] = 0;
   out_4945586723444974270[8] = 0;
   out_4945586723444974270[9] = 0;
   out_4945586723444974270[10] = 0;
   out_4945586723444974270[11] = 0;
   out_4945586723444974270[12] = 0;
   out_4945586723444974270[13] = 0;
   out_4945586723444974270[14] = 0;
   out_4945586723444974270[15] = 0;
   out_4945586723444974270[16] = 0;
   out_4945586723444974270[17] = 0;
   out_4945586723444974270[18] = 0;
   out_4945586723444974270[19] = 0;
   out_4945586723444974270[20] = 0;
   out_4945586723444974270[21] = 0;
   out_4945586723444974270[22] = 0;
   out_4945586723444974270[23] = 1;
   out_4945586723444974270[24] = 0;
   out_4945586723444974270[25] = 0;
   out_4945586723444974270[26] = 0;
   out_4945586723444974270[27] = 0;
   out_4945586723444974270[28] = 0;
   out_4945586723444974270[29] = 0;
   out_4945586723444974270[30] = 0;
   out_4945586723444974270[31] = 0;
   out_4945586723444974270[32] = 0;
   out_4945586723444974270[33] = 0;
   out_4945586723444974270[34] = 0;
   out_4945586723444974270[35] = 0;
   out_4945586723444974270[36] = 0;
   out_4945586723444974270[37] = 0;
   out_4945586723444974270[38] = 0;
   out_4945586723444974270[39] = 0;
   out_4945586723444974270[40] = 0;
   out_4945586723444974270[41] = 0;
   out_4945586723444974270[42] = 0;
   out_4945586723444974270[43] = 0;
   out_4945586723444974270[44] = 0;
   out_4945586723444974270[45] = 0;
   out_4945586723444974270[46] = 1;
   out_4945586723444974270[47] = 0;
   out_4945586723444974270[48] = 0;
   out_4945586723444974270[49] = 0;
   out_4945586723444974270[50] = 0;
   out_4945586723444974270[51] = 0;
   out_4945586723444974270[52] = 0;
   out_4945586723444974270[53] = 0;
   out_4945586723444974270[54] = 0;
   out_4945586723444974270[55] = 0;
   out_4945586723444974270[56] = 0;
   out_4945586723444974270[57] = 0;
   out_4945586723444974270[58] = 0;
   out_4945586723444974270[59] = 0;
   out_4945586723444974270[60] = 0;
   out_4945586723444974270[61] = 0;
   out_4945586723444974270[62] = 0;
   out_4945586723444974270[63] = 0;
   out_4945586723444974270[64] = 0;
   out_4945586723444974270[65] = 0;
}
void h_35(double *state, double *unused, double *out_4015600202884045942) {
   out_4015600202884045942[0] = state[7];
   out_4015600202884045942[1] = state[8];
   out_4015600202884045942[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3753236915849236974) {
   out_3753236915849236974[0] = 0;
   out_3753236915849236974[1] = 0;
   out_3753236915849236974[2] = 0;
   out_3753236915849236974[3] = 0;
   out_3753236915849236974[4] = 0;
   out_3753236915849236974[5] = 0;
   out_3753236915849236974[6] = 0;
   out_3753236915849236974[7] = 1;
   out_3753236915849236974[8] = 0;
   out_3753236915849236974[9] = 0;
   out_3753236915849236974[10] = 0;
   out_3753236915849236974[11] = 0;
   out_3753236915849236974[12] = 0;
   out_3753236915849236974[13] = 0;
   out_3753236915849236974[14] = 0;
   out_3753236915849236974[15] = 0;
   out_3753236915849236974[16] = 0;
   out_3753236915849236974[17] = 0;
   out_3753236915849236974[18] = 0;
   out_3753236915849236974[19] = 0;
   out_3753236915849236974[20] = 0;
   out_3753236915849236974[21] = 0;
   out_3753236915849236974[22] = 0;
   out_3753236915849236974[23] = 0;
   out_3753236915849236974[24] = 0;
   out_3753236915849236974[25] = 0;
   out_3753236915849236974[26] = 0;
   out_3753236915849236974[27] = 0;
   out_3753236915849236974[28] = 0;
   out_3753236915849236974[29] = 0;
   out_3753236915849236974[30] = 1;
   out_3753236915849236974[31] = 0;
   out_3753236915849236974[32] = 0;
   out_3753236915849236974[33] = 0;
   out_3753236915849236974[34] = 0;
   out_3753236915849236974[35] = 0;
   out_3753236915849236974[36] = 0;
   out_3753236915849236974[37] = 0;
   out_3753236915849236974[38] = 0;
   out_3753236915849236974[39] = 0;
   out_3753236915849236974[40] = 0;
   out_3753236915849236974[41] = 0;
   out_3753236915849236974[42] = 0;
   out_3753236915849236974[43] = 0;
   out_3753236915849236974[44] = 0;
   out_3753236915849236974[45] = 0;
   out_3753236915849236974[46] = 0;
   out_3753236915849236974[47] = 0;
   out_3753236915849236974[48] = 0;
   out_3753236915849236974[49] = 0;
   out_3753236915849236974[50] = 0;
   out_3753236915849236974[51] = 0;
   out_3753236915849236974[52] = 0;
   out_3753236915849236974[53] = 1;
   out_3753236915849236974[54] = 0;
   out_3753236915849236974[55] = 0;
   out_3753236915849236974[56] = 0;
   out_3753236915849236974[57] = 0;
   out_3753236915849236974[58] = 0;
   out_3753236915849236974[59] = 0;
   out_3753236915849236974[60] = 0;
   out_3753236915849236974[61] = 0;
   out_3753236915849236974[62] = 0;
   out_3753236915849236974[63] = 0;
   out_3753236915849236974[64] = 0;
   out_3753236915849236974[65] = 0;
}
void h_32(double *state, double *unused, double *out_8212171515907450875) {
   out_8212171515907450875[0] = state[3];
   out_8212171515907450875[1] = state[4];
   out_8212171515907450875[2] = state[5];
   out_8212171515907450875[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1812398578516228173) {
   out_1812398578516228173[0] = 0;
   out_1812398578516228173[1] = 0;
   out_1812398578516228173[2] = 0;
   out_1812398578516228173[3] = 1;
   out_1812398578516228173[4] = 0;
   out_1812398578516228173[5] = 0;
   out_1812398578516228173[6] = 0;
   out_1812398578516228173[7] = 0;
   out_1812398578516228173[8] = 0;
   out_1812398578516228173[9] = 0;
   out_1812398578516228173[10] = 0;
   out_1812398578516228173[11] = 0;
   out_1812398578516228173[12] = 0;
   out_1812398578516228173[13] = 0;
   out_1812398578516228173[14] = 0;
   out_1812398578516228173[15] = 0;
   out_1812398578516228173[16] = 0;
   out_1812398578516228173[17] = 0;
   out_1812398578516228173[18] = 0;
   out_1812398578516228173[19] = 0;
   out_1812398578516228173[20] = 0;
   out_1812398578516228173[21] = 0;
   out_1812398578516228173[22] = 0;
   out_1812398578516228173[23] = 0;
   out_1812398578516228173[24] = 0;
   out_1812398578516228173[25] = 0;
   out_1812398578516228173[26] = 1;
   out_1812398578516228173[27] = 0;
   out_1812398578516228173[28] = 0;
   out_1812398578516228173[29] = 0;
   out_1812398578516228173[30] = 0;
   out_1812398578516228173[31] = 0;
   out_1812398578516228173[32] = 0;
   out_1812398578516228173[33] = 0;
   out_1812398578516228173[34] = 0;
   out_1812398578516228173[35] = 0;
   out_1812398578516228173[36] = 0;
   out_1812398578516228173[37] = 0;
   out_1812398578516228173[38] = 0;
   out_1812398578516228173[39] = 0;
   out_1812398578516228173[40] = 0;
   out_1812398578516228173[41] = 0;
   out_1812398578516228173[42] = 0;
   out_1812398578516228173[43] = 0;
   out_1812398578516228173[44] = 0;
   out_1812398578516228173[45] = 0;
   out_1812398578516228173[46] = 0;
   out_1812398578516228173[47] = 0;
   out_1812398578516228173[48] = 0;
   out_1812398578516228173[49] = 1;
   out_1812398578516228173[50] = 0;
   out_1812398578516228173[51] = 0;
   out_1812398578516228173[52] = 0;
   out_1812398578516228173[53] = 0;
   out_1812398578516228173[54] = 0;
   out_1812398578516228173[55] = 0;
   out_1812398578516228173[56] = 0;
   out_1812398578516228173[57] = 0;
   out_1812398578516228173[58] = 0;
   out_1812398578516228173[59] = 0;
   out_1812398578516228173[60] = 0;
   out_1812398578516228173[61] = 0;
   out_1812398578516228173[62] = 0;
   out_1812398578516228173[63] = 0;
   out_1812398578516228173[64] = 0;
   out_1812398578516228173[65] = 0;
   out_1812398578516228173[66] = 0;
   out_1812398578516228173[67] = 0;
   out_1812398578516228173[68] = 0;
   out_1812398578516228173[69] = 0;
   out_1812398578516228173[70] = 0;
   out_1812398578516228173[71] = 0;
   out_1812398578516228173[72] = 1;
   out_1812398578516228173[73] = 0;
   out_1812398578516228173[74] = 0;
   out_1812398578516228173[75] = 0;
   out_1812398578516228173[76] = 0;
   out_1812398578516228173[77] = 0;
   out_1812398578516228173[78] = 0;
   out_1812398578516228173[79] = 0;
   out_1812398578516228173[80] = 0;
   out_1812398578516228173[81] = 0;
   out_1812398578516228173[82] = 0;
   out_1812398578516228173[83] = 0;
   out_1812398578516228173[84] = 0;
   out_1812398578516228173[85] = 0;
   out_1812398578516228173[86] = 0;
   out_1812398578516228173[87] = 0;
}
void h_13(double *state, double *unused, double *out_4851467518136304959) {
   out_4851467518136304959[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4851467518136304959[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4851467518136304959[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1024824958168971694) {
   out_1024824958168971694[0] = 0;
   out_1024824958168971694[1] = 0;
   out_1024824958168971694[2] = 0;
   out_1024824958168971694[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1024824958168971694[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1024824958168971694[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1024824958168971694[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1024824958168971694[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1024824958168971694[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1024824958168971694[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1024824958168971694[10] = 0;
   out_1024824958168971694[11] = 0;
   out_1024824958168971694[12] = 0;
   out_1024824958168971694[13] = 0;
   out_1024824958168971694[14] = 0;
   out_1024824958168971694[15] = 0;
   out_1024824958168971694[16] = 0;
   out_1024824958168971694[17] = 0;
   out_1024824958168971694[18] = 0;
   out_1024824958168971694[19] = 0;
   out_1024824958168971694[20] = 0;
   out_1024824958168971694[21] = 0;
   out_1024824958168971694[22] = 0;
   out_1024824958168971694[23] = 0;
   out_1024824958168971694[24] = 0;
   out_1024824958168971694[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1024824958168971694[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1024824958168971694[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1024824958168971694[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1024824958168971694[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1024824958168971694[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1024824958168971694[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1024824958168971694[32] = 0;
   out_1024824958168971694[33] = 0;
   out_1024824958168971694[34] = 0;
   out_1024824958168971694[35] = 0;
   out_1024824958168971694[36] = 0;
   out_1024824958168971694[37] = 0;
   out_1024824958168971694[38] = 0;
   out_1024824958168971694[39] = 0;
   out_1024824958168971694[40] = 0;
   out_1024824958168971694[41] = 0;
   out_1024824958168971694[42] = 0;
   out_1024824958168971694[43] = 0;
   out_1024824958168971694[44] = 0;
   out_1024824958168971694[45] = 0;
   out_1024824958168971694[46] = 0;
   out_1024824958168971694[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1024824958168971694[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1024824958168971694[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1024824958168971694[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1024824958168971694[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1024824958168971694[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1024824958168971694[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1024824958168971694[54] = 0;
   out_1024824958168971694[55] = 0;
   out_1024824958168971694[56] = 0;
   out_1024824958168971694[57] = 0;
   out_1024824958168971694[58] = 0;
   out_1024824958168971694[59] = 0;
   out_1024824958168971694[60] = 0;
   out_1024824958168971694[61] = 0;
   out_1024824958168971694[62] = 0;
   out_1024824958168971694[63] = 0;
   out_1024824958168971694[64] = 0;
   out_1024824958168971694[65] = 0;
}
void h_14(double *state, double *unused, double *out_5405768222819323892) {
   out_5405768222819323892[0] = state[10];
   out_5405768222819323892[1] = state[11];
   out_5405768222819323892[2] = state[12];
}
void H_14(double *state, double *unused, double *out_167319962042603120) {
   out_167319962042603120[0] = 0;
   out_167319962042603120[1] = 0;
   out_167319962042603120[2] = 0;
   out_167319962042603120[3] = 0;
   out_167319962042603120[4] = 0;
   out_167319962042603120[5] = 0;
   out_167319962042603120[6] = 0;
   out_167319962042603120[7] = 0;
   out_167319962042603120[8] = 0;
   out_167319962042603120[9] = 0;
   out_167319962042603120[10] = 1;
   out_167319962042603120[11] = 0;
   out_167319962042603120[12] = 0;
   out_167319962042603120[13] = 0;
   out_167319962042603120[14] = 0;
   out_167319962042603120[15] = 0;
   out_167319962042603120[16] = 0;
   out_167319962042603120[17] = 0;
   out_167319962042603120[18] = 0;
   out_167319962042603120[19] = 0;
   out_167319962042603120[20] = 0;
   out_167319962042603120[21] = 0;
   out_167319962042603120[22] = 0;
   out_167319962042603120[23] = 0;
   out_167319962042603120[24] = 0;
   out_167319962042603120[25] = 0;
   out_167319962042603120[26] = 0;
   out_167319962042603120[27] = 0;
   out_167319962042603120[28] = 0;
   out_167319962042603120[29] = 0;
   out_167319962042603120[30] = 0;
   out_167319962042603120[31] = 0;
   out_167319962042603120[32] = 0;
   out_167319962042603120[33] = 1;
   out_167319962042603120[34] = 0;
   out_167319962042603120[35] = 0;
   out_167319962042603120[36] = 0;
   out_167319962042603120[37] = 0;
   out_167319962042603120[38] = 0;
   out_167319962042603120[39] = 0;
   out_167319962042603120[40] = 0;
   out_167319962042603120[41] = 0;
   out_167319962042603120[42] = 0;
   out_167319962042603120[43] = 0;
   out_167319962042603120[44] = 0;
   out_167319962042603120[45] = 0;
   out_167319962042603120[46] = 0;
   out_167319962042603120[47] = 0;
   out_167319962042603120[48] = 0;
   out_167319962042603120[49] = 0;
   out_167319962042603120[50] = 0;
   out_167319962042603120[51] = 0;
   out_167319962042603120[52] = 0;
   out_167319962042603120[53] = 0;
   out_167319962042603120[54] = 0;
   out_167319962042603120[55] = 0;
   out_167319962042603120[56] = 1;
   out_167319962042603120[57] = 0;
   out_167319962042603120[58] = 0;
   out_167319962042603120[59] = 0;
   out_167319962042603120[60] = 0;
   out_167319962042603120[61] = 0;
   out_167319962042603120[62] = 0;
   out_167319962042603120[63] = 0;
   out_167319962042603120[64] = 0;
   out_167319962042603120[65] = 0;
}
void h_33(double *state, double *unused, double *out_3544878753551304046) {
   out_3544878753551304046[0] = state[16];
   out_3544878753551304046[1] = state[17];
   out_3544878753551304046[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6443349377424477455) {
   out_6443349377424477455[0] = 0;
   out_6443349377424477455[1] = 0;
   out_6443349377424477455[2] = 0;
   out_6443349377424477455[3] = 0;
   out_6443349377424477455[4] = 0;
   out_6443349377424477455[5] = 0;
   out_6443349377424477455[6] = 0;
   out_6443349377424477455[7] = 0;
   out_6443349377424477455[8] = 0;
   out_6443349377424477455[9] = 0;
   out_6443349377424477455[10] = 0;
   out_6443349377424477455[11] = 0;
   out_6443349377424477455[12] = 0;
   out_6443349377424477455[13] = 0;
   out_6443349377424477455[14] = 0;
   out_6443349377424477455[15] = 0;
   out_6443349377424477455[16] = 1;
   out_6443349377424477455[17] = 0;
   out_6443349377424477455[18] = 0;
   out_6443349377424477455[19] = 0;
   out_6443349377424477455[20] = 0;
   out_6443349377424477455[21] = 0;
   out_6443349377424477455[22] = 0;
   out_6443349377424477455[23] = 0;
   out_6443349377424477455[24] = 0;
   out_6443349377424477455[25] = 0;
   out_6443349377424477455[26] = 0;
   out_6443349377424477455[27] = 0;
   out_6443349377424477455[28] = 0;
   out_6443349377424477455[29] = 0;
   out_6443349377424477455[30] = 0;
   out_6443349377424477455[31] = 0;
   out_6443349377424477455[32] = 0;
   out_6443349377424477455[33] = 0;
   out_6443349377424477455[34] = 0;
   out_6443349377424477455[35] = 0;
   out_6443349377424477455[36] = 0;
   out_6443349377424477455[37] = 0;
   out_6443349377424477455[38] = 0;
   out_6443349377424477455[39] = 1;
   out_6443349377424477455[40] = 0;
   out_6443349377424477455[41] = 0;
   out_6443349377424477455[42] = 0;
   out_6443349377424477455[43] = 0;
   out_6443349377424477455[44] = 0;
   out_6443349377424477455[45] = 0;
   out_6443349377424477455[46] = 0;
   out_6443349377424477455[47] = 0;
   out_6443349377424477455[48] = 0;
   out_6443349377424477455[49] = 0;
   out_6443349377424477455[50] = 0;
   out_6443349377424477455[51] = 0;
   out_6443349377424477455[52] = 0;
   out_6443349377424477455[53] = 0;
   out_6443349377424477455[54] = 0;
   out_6443349377424477455[55] = 0;
   out_6443349377424477455[56] = 0;
   out_6443349377424477455[57] = 0;
   out_6443349377424477455[58] = 0;
   out_6443349377424477455[59] = 0;
   out_6443349377424477455[60] = 0;
   out_6443349377424477455[61] = 0;
   out_6443349377424477455[62] = 1;
   out_6443349377424477455[63] = 0;
   out_6443349377424477455[64] = 0;
   out_6443349377424477455[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7574157216459850782) {
  H(in_vec, out_7574157216459850782);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4055774789120932026) {
  err_fun(nom_x, delta_x, out_4055774789120932026);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4730548230420475348) {
  inv_err_fun(nom_x, true_x, out_4730548230420475348);
}
void live_H_mod_fun(double *state, double *out_5813799317262680088) {
  H_mod_fun(state, out_5813799317262680088);
}
void live_f_fun(double *state, double dt, double *out_8261305250467109423) {
  f_fun(state,  dt, out_8261305250467109423);
}
void live_F_fun(double *state, double dt, double *out_7969107683281141771) {
  F_fun(state,  dt, out_7969107683281141771);
}
void live_h_4(double *state, double *unused, double *out_19229563063502244) {
  h_4(state, unused, out_19229563063502244);
}
void live_H_4(double *state, double *unused, double *out_7119898973221844350) {
  H_4(state, unused, out_7119898973221844350);
}
void live_h_9(double *state, double *unused, double *out_5405768222819323892) {
  h_9(state, unused, out_5405768222819323892);
}
void live_H_9(double *state, double *unused, double *out_167319962042603120) {
  H_9(state, unused, out_167319962042603120);
}
void live_h_10(double *state, double *unused, double *out_7122991885274472666) {
  h_10(state, unused, out_7122991885274472666);
}
void live_H_10(double *state, double *unused, double *out_8001066680165645977) {
  H_10(state, unused, out_8001066680165645977);
}
void live_h_12(double *state, double *unused, double *out_7324409554195996501) {
  h_12(state, unused, out_7324409554195996501);
}
void live_H_12(double *state, double *unused, double *out_4945586723444974270) {
  H_12(state, unused, out_4945586723444974270);
}
void live_h_35(double *state, double *unused, double *out_4015600202884045942) {
  h_35(state, unused, out_4015600202884045942);
}
void live_H_35(double *state, double *unused, double *out_3753236915849236974) {
  H_35(state, unused, out_3753236915849236974);
}
void live_h_32(double *state, double *unused, double *out_8212171515907450875) {
  h_32(state, unused, out_8212171515907450875);
}
void live_H_32(double *state, double *unused, double *out_1812398578516228173) {
  H_32(state, unused, out_1812398578516228173);
}
void live_h_13(double *state, double *unused, double *out_4851467518136304959) {
  h_13(state, unused, out_4851467518136304959);
}
void live_H_13(double *state, double *unused, double *out_1024824958168971694) {
  H_13(state, unused, out_1024824958168971694);
}
void live_h_14(double *state, double *unused, double *out_5405768222819323892) {
  h_14(state, unused, out_5405768222819323892);
}
void live_H_14(double *state, double *unused, double *out_167319962042603120) {
  H_14(state, unused, out_167319962042603120);
}
void live_h_33(double *state, double *unused, double *out_3544878753551304046) {
  h_33(state, unused, out_3544878753551304046);
}
void live_H_33(double *state, double *unused, double *out_6443349377424477455) {
  H_33(state, unused, out_6443349377424477455);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
