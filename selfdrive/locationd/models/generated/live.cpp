#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8634487822663781268) {
   out_8634487822663781268[0] = 0;
   out_8634487822663781268[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8634487822663781268[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8634487822663781268[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8634487822663781268[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8634487822663781268[5] = -sin(in_vec[1]);
   out_8634487822663781268[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8634487822663781268[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8634487822663781268[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8634487822663781268[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8634487822663781268[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8634487822663781268[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8634487822663781268[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8634487822663781268[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8634487822663781268[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8634487822663781268[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8634487822663781268[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8634487822663781268[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_783016460155138911) {
   out_783016460155138911[0] = delta_x[0] + nom_x[0];
   out_783016460155138911[1] = delta_x[1] + nom_x[1];
   out_783016460155138911[2] = delta_x[2] + nom_x[2];
   out_783016460155138911[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_783016460155138911[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_783016460155138911[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_783016460155138911[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_783016460155138911[7] = delta_x[6] + nom_x[7];
   out_783016460155138911[8] = delta_x[7] + nom_x[8];
   out_783016460155138911[9] = delta_x[8] + nom_x[9];
   out_783016460155138911[10] = delta_x[9] + nom_x[10];
   out_783016460155138911[11] = delta_x[10] + nom_x[11];
   out_783016460155138911[12] = delta_x[11] + nom_x[12];
   out_783016460155138911[13] = delta_x[12] + nom_x[13];
   out_783016460155138911[14] = delta_x[13] + nom_x[14];
   out_783016460155138911[15] = delta_x[14] + nom_x[15];
   out_783016460155138911[16] = delta_x[15] + nom_x[16];
   out_783016460155138911[17] = delta_x[16] + nom_x[17];
   out_783016460155138911[18] = delta_x[17] + nom_x[18];
   out_783016460155138911[19] = delta_x[18] + nom_x[19];
   out_783016460155138911[20] = delta_x[19] + nom_x[20];
   out_783016460155138911[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_106834797478900715) {
   out_106834797478900715[0] = -nom_x[0] + true_x[0];
   out_106834797478900715[1] = -nom_x[1] + true_x[1];
   out_106834797478900715[2] = -nom_x[2] + true_x[2];
   out_106834797478900715[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_106834797478900715[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_106834797478900715[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_106834797478900715[6] = -nom_x[7] + true_x[7];
   out_106834797478900715[7] = -nom_x[8] + true_x[8];
   out_106834797478900715[8] = -nom_x[9] + true_x[9];
   out_106834797478900715[9] = -nom_x[10] + true_x[10];
   out_106834797478900715[10] = -nom_x[11] + true_x[11];
   out_106834797478900715[11] = -nom_x[12] + true_x[12];
   out_106834797478900715[12] = -nom_x[13] + true_x[13];
   out_106834797478900715[13] = -nom_x[14] + true_x[14];
   out_106834797478900715[14] = -nom_x[15] + true_x[15];
   out_106834797478900715[15] = -nom_x[16] + true_x[16];
   out_106834797478900715[16] = -nom_x[17] + true_x[17];
   out_106834797478900715[17] = -nom_x[18] + true_x[18];
   out_106834797478900715[18] = -nom_x[19] + true_x[19];
   out_106834797478900715[19] = -nom_x[20] + true_x[20];
   out_106834797478900715[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6579876420749052012) {
   out_6579876420749052012[0] = 1.0;
   out_6579876420749052012[1] = 0;
   out_6579876420749052012[2] = 0;
   out_6579876420749052012[3] = 0;
   out_6579876420749052012[4] = 0;
   out_6579876420749052012[5] = 0;
   out_6579876420749052012[6] = 0;
   out_6579876420749052012[7] = 0;
   out_6579876420749052012[8] = 0;
   out_6579876420749052012[9] = 0;
   out_6579876420749052012[10] = 0;
   out_6579876420749052012[11] = 0;
   out_6579876420749052012[12] = 0;
   out_6579876420749052012[13] = 0;
   out_6579876420749052012[14] = 0;
   out_6579876420749052012[15] = 0;
   out_6579876420749052012[16] = 0;
   out_6579876420749052012[17] = 0;
   out_6579876420749052012[18] = 0;
   out_6579876420749052012[19] = 0;
   out_6579876420749052012[20] = 0;
   out_6579876420749052012[21] = 0;
   out_6579876420749052012[22] = 1.0;
   out_6579876420749052012[23] = 0;
   out_6579876420749052012[24] = 0;
   out_6579876420749052012[25] = 0;
   out_6579876420749052012[26] = 0;
   out_6579876420749052012[27] = 0;
   out_6579876420749052012[28] = 0;
   out_6579876420749052012[29] = 0;
   out_6579876420749052012[30] = 0;
   out_6579876420749052012[31] = 0;
   out_6579876420749052012[32] = 0;
   out_6579876420749052012[33] = 0;
   out_6579876420749052012[34] = 0;
   out_6579876420749052012[35] = 0;
   out_6579876420749052012[36] = 0;
   out_6579876420749052012[37] = 0;
   out_6579876420749052012[38] = 0;
   out_6579876420749052012[39] = 0;
   out_6579876420749052012[40] = 0;
   out_6579876420749052012[41] = 0;
   out_6579876420749052012[42] = 0;
   out_6579876420749052012[43] = 0;
   out_6579876420749052012[44] = 1.0;
   out_6579876420749052012[45] = 0;
   out_6579876420749052012[46] = 0;
   out_6579876420749052012[47] = 0;
   out_6579876420749052012[48] = 0;
   out_6579876420749052012[49] = 0;
   out_6579876420749052012[50] = 0;
   out_6579876420749052012[51] = 0;
   out_6579876420749052012[52] = 0;
   out_6579876420749052012[53] = 0;
   out_6579876420749052012[54] = 0;
   out_6579876420749052012[55] = 0;
   out_6579876420749052012[56] = 0;
   out_6579876420749052012[57] = 0;
   out_6579876420749052012[58] = 0;
   out_6579876420749052012[59] = 0;
   out_6579876420749052012[60] = 0;
   out_6579876420749052012[61] = 0;
   out_6579876420749052012[62] = 0;
   out_6579876420749052012[63] = 0;
   out_6579876420749052012[64] = 0;
   out_6579876420749052012[65] = 0;
   out_6579876420749052012[66] = -0.5*state[4];
   out_6579876420749052012[67] = -0.5*state[5];
   out_6579876420749052012[68] = -0.5*state[6];
   out_6579876420749052012[69] = 0;
   out_6579876420749052012[70] = 0;
   out_6579876420749052012[71] = 0;
   out_6579876420749052012[72] = 0;
   out_6579876420749052012[73] = 0;
   out_6579876420749052012[74] = 0;
   out_6579876420749052012[75] = 0;
   out_6579876420749052012[76] = 0;
   out_6579876420749052012[77] = 0;
   out_6579876420749052012[78] = 0;
   out_6579876420749052012[79] = 0;
   out_6579876420749052012[80] = 0;
   out_6579876420749052012[81] = 0;
   out_6579876420749052012[82] = 0;
   out_6579876420749052012[83] = 0;
   out_6579876420749052012[84] = 0;
   out_6579876420749052012[85] = 0;
   out_6579876420749052012[86] = 0;
   out_6579876420749052012[87] = 0.5*state[3];
   out_6579876420749052012[88] = 0.5*state[6];
   out_6579876420749052012[89] = -0.5*state[5];
   out_6579876420749052012[90] = 0;
   out_6579876420749052012[91] = 0;
   out_6579876420749052012[92] = 0;
   out_6579876420749052012[93] = 0;
   out_6579876420749052012[94] = 0;
   out_6579876420749052012[95] = 0;
   out_6579876420749052012[96] = 0;
   out_6579876420749052012[97] = 0;
   out_6579876420749052012[98] = 0;
   out_6579876420749052012[99] = 0;
   out_6579876420749052012[100] = 0;
   out_6579876420749052012[101] = 0;
   out_6579876420749052012[102] = 0;
   out_6579876420749052012[103] = 0;
   out_6579876420749052012[104] = 0;
   out_6579876420749052012[105] = 0;
   out_6579876420749052012[106] = 0;
   out_6579876420749052012[107] = 0;
   out_6579876420749052012[108] = -0.5*state[6];
   out_6579876420749052012[109] = 0.5*state[3];
   out_6579876420749052012[110] = 0.5*state[4];
   out_6579876420749052012[111] = 0;
   out_6579876420749052012[112] = 0;
   out_6579876420749052012[113] = 0;
   out_6579876420749052012[114] = 0;
   out_6579876420749052012[115] = 0;
   out_6579876420749052012[116] = 0;
   out_6579876420749052012[117] = 0;
   out_6579876420749052012[118] = 0;
   out_6579876420749052012[119] = 0;
   out_6579876420749052012[120] = 0;
   out_6579876420749052012[121] = 0;
   out_6579876420749052012[122] = 0;
   out_6579876420749052012[123] = 0;
   out_6579876420749052012[124] = 0;
   out_6579876420749052012[125] = 0;
   out_6579876420749052012[126] = 0;
   out_6579876420749052012[127] = 0;
   out_6579876420749052012[128] = 0;
   out_6579876420749052012[129] = 0.5*state[5];
   out_6579876420749052012[130] = -0.5*state[4];
   out_6579876420749052012[131] = 0.5*state[3];
   out_6579876420749052012[132] = 0;
   out_6579876420749052012[133] = 0;
   out_6579876420749052012[134] = 0;
   out_6579876420749052012[135] = 0;
   out_6579876420749052012[136] = 0;
   out_6579876420749052012[137] = 0;
   out_6579876420749052012[138] = 0;
   out_6579876420749052012[139] = 0;
   out_6579876420749052012[140] = 0;
   out_6579876420749052012[141] = 0;
   out_6579876420749052012[142] = 0;
   out_6579876420749052012[143] = 0;
   out_6579876420749052012[144] = 0;
   out_6579876420749052012[145] = 0;
   out_6579876420749052012[146] = 0;
   out_6579876420749052012[147] = 0;
   out_6579876420749052012[148] = 0;
   out_6579876420749052012[149] = 0;
   out_6579876420749052012[150] = 0;
   out_6579876420749052012[151] = 0;
   out_6579876420749052012[152] = 0;
   out_6579876420749052012[153] = 1.0;
   out_6579876420749052012[154] = 0;
   out_6579876420749052012[155] = 0;
   out_6579876420749052012[156] = 0;
   out_6579876420749052012[157] = 0;
   out_6579876420749052012[158] = 0;
   out_6579876420749052012[159] = 0;
   out_6579876420749052012[160] = 0;
   out_6579876420749052012[161] = 0;
   out_6579876420749052012[162] = 0;
   out_6579876420749052012[163] = 0;
   out_6579876420749052012[164] = 0;
   out_6579876420749052012[165] = 0;
   out_6579876420749052012[166] = 0;
   out_6579876420749052012[167] = 0;
   out_6579876420749052012[168] = 0;
   out_6579876420749052012[169] = 0;
   out_6579876420749052012[170] = 0;
   out_6579876420749052012[171] = 0;
   out_6579876420749052012[172] = 0;
   out_6579876420749052012[173] = 0;
   out_6579876420749052012[174] = 0;
   out_6579876420749052012[175] = 1.0;
   out_6579876420749052012[176] = 0;
   out_6579876420749052012[177] = 0;
   out_6579876420749052012[178] = 0;
   out_6579876420749052012[179] = 0;
   out_6579876420749052012[180] = 0;
   out_6579876420749052012[181] = 0;
   out_6579876420749052012[182] = 0;
   out_6579876420749052012[183] = 0;
   out_6579876420749052012[184] = 0;
   out_6579876420749052012[185] = 0;
   out_6579876420749052012[186] = 0;
   out_6579876420749052012[187] = 0;
   out_6579876420749052012[188] = 0;
   out_6579876420749052012[189] = 0;
   out_6579876420749052012[190] = 0;
   out_6579876420749052012[191] = 0;
   out_6579876420749052012[192] = 0;
   out_6579876420749052012[193] = 0;
   out_6579876420749052012[194] = 0;
   out_6579876420749052012[195] = 0;
   out_6579876420749052012[196] = 0;
   out_6579876420749052012[197] = 1.0;
   out_6579876420749052012[198] = 0;
   out_6579876420749052012[199] = 0;
   out_6579876420749052012[200] = 0;
   out_6579876420749052012[201] = 0;
   out_6579876420749052012[202] = 0;
   out_6579876420749052012[203] = 0;
   out_6579876420749052012[204] = 0;
   out_6579876420749052012[205] = 0;
   out_6579876420749052012[206] = 0;
   out_6579876420749052012[207] = 0;
   out_6579876420749052012[208] = 0;
   out_6579876420749052012[209] = 0;
   out_6579876420749052012[210] = 0;
   out_6579876420749052012[211] = 0;
   out_6579876420749052012[212] = 0;
   out_6579876420749052012[213] = 0;
   out_6579876420749052012[214] = 0;
   out_6579876420749052012[215] = 0;
   out_6579876420749052012[216] = 0;
   out_6579876420749052012[217] = 0;
   out_6579876420749052012[218] = 0;
   out_6579876420749052012[219] = 1.0;
   out_6579876420749052012[220] = 0;
   out_6579876420749052012[221] = 0;
   out_6579876420749052012[222] = 0;
   out_6579876420749052012[223] = 0;
   out_6579876420749052012[224] = 0;
   out_6579876420749052012[225] = 0;
   out_6579876420749052012[226] = 0;
   out_6579876420749052012[227] = 0;
   out_6579876420749052012[228] = 0;
   out_6579876420749052012[229] = 0;
   out_6579876420749052012[230] = 0;
   out_6579876420749052012[231] = 0;
   out_6579876420749052012[232] = 0;
   out_6579876420749052012[233] = 0;
   out_6579876420749052012[234] = 0;
   out_6579876420749052012[235] = 0;
   out_6579876420749052012[236] = 0;
   out_6579876420749052012[237] = 0;
   out_6579876420749052012[238] = 0;
   out_6579876420749052012[239] = 0;
   out_6579876420749052012[240] = 0;
   out_6579876420749052012[241] = 1.0;
   out_6579876420749052012[242] = 0;
   out_6579876420749052012[243] = 0;
   out_6579876420749052012[244] = 0;
   out_6579876420749052012[245] = 0;
   out_6579876420749052012[246] = 0;
   out_6579876420749052012[247] = 0;
   out_6579876420749052012[248] = 0;
   out_6579876420749052012[249] = 0;
   out_6579876420749052012[250] = 0;
   out_6579876420749052012[251] = 0;
   out_6579876420749052012[252] = 0;
   out_6579876420749052012[253] = 0;
   out_6579876420749052012[254] = 0;
   out_6579876420749052012[255] = 0;
   out_6579876420749052012[256] = 0;
   out_6579876420749052012[257] = 0;
   out_6579876420749052012[258] = 0;
   out_6579876420749052012[259] = 0;
   out_6579876420749052012[260] = 0;
   out_6579876420749052012[261] = 0;
   out_6579876420749052012[262] = 0;
   out_6579876420749052012[263] = 1.0;
   out_6579876420749052012[264] = 0;
   out_6579876420749052012[265] = 0;
   out_6579876420749052012[266] = 0;
   out_6579876420749052012[267] = 0;
   out_6579876420749052012[268] = 0;
   out_6579876420749052012[269] = 0;
   out_6579876420749052012[270] = 0;
   out_6579876420749052012[271] = 0;
   out_6579876420749052012[272] = 0;
   out_6579876420749052012[273] = 0;
   out_6579876420749052012[274] = 0;
   out_6579876420749052012[275] = 0;
   out_6579876420749052012[276] = 0;
   out_6579876420749052012[277] = 0;
   out_6579876420749052012[278] = 0;
   out_6579876420749052012[279] = 0;
   out_6579876420749052012[280] = 0;
   out_6579876420749052012[281] = 0;
   out_6579876420749052012[282] = 0;
   out_6579876420749052012[283] = 0;
   out_6579876420749052012[284] = 0;
   out_6579876420749052012[285] = 1.0;
   out_6579876420749052012[286] = 0;
   out_6579876420749052012[287] = 0;
   out_6579876420749052012[288] = 0;
   out_6579876420749052012[289] = 0;
   out_6579876420749052012[290] = 0;
   out_6579876420749052012[291] = 0;
   out_6579876420749052012[292] = 0;
   out_6579876420749052012[293] = 0;
   out_6579876420749052012[294] = 0;
   out_6579876420749052012[295] = 0;
   out_6579876420749052012[296] = 0;
   out_6579876420749052012[297] = 0;
   out_6579876420749052012[298] = 0;
   out_6579876420749052012[299] = 0;
   out_6579876420749052012[300] = 0;
   out_6579876420749052012[301] = 0;
   out_6579876420749052012[302] = 0;
   out_6579876420749052012[303] = 0;
   out_6579876420749052012[304] = 0;
   out_6579876420749052012[305] = 0;
   out_6579876420749052012[306] = 0;
   out_6579876420749052012[307] = 1.0;
   out_6579876420749052012[308] = 0;
   out_6579876420749052012[309] = 0;
   out_6579876420749052012[310] = 0;
   out_6579876420749052012[311] = 0;
   out_6579876420749052012[312] = 0;
   out_6579876420749052012[313] = 0;
   out_6579876420749052012[314] = 0;
   out_6579876420749052012[315] = 0;
   out_6579876420749052012[316] = 0;
   out_6579876420749052012[317] = 0;
   out_6579876420749052012[318] = 0;
   out_6579876420749052012[319] = 0;
   out_6579876420749052012[320] = 0;
   out_6579876420749052012[321] = 0;
   out_6579876420749052012[322] = 0;
   out_6579876420749052012[323] = 0;
   out_6579876420749052012[324] = 0;
   out_6579876420749052012[325] = 0;
   out_6579876420749052012[326] = 0;
   out_6579876420749052012[327] = 0;
   out_6579876420749052012[328] = 0;
   out_6579876420749052012[329] = 1.0;
   out_6579876420749052012[330] = 0;
   out_6579876420749052012[331] = 0;
   out_6579876420749052012[332] = 0;
   out_6579876420749052012[333] = 0;
   out_6579876420749052012[334] = 0;
   out_6579876420749052012[335] = 0;
   out_6579876420749052012[336] = 0;
   out_6579876420749052012[337] = 0;
   out_6579876420749052012[338] = 0;
   out_6579876420749052012[339] = 0;
   out_6579876420749052012[340] = 0;
   out_6579876420749052012[341] = 0;
   out_6579876420749052012[342] = 0;
   out_6579876420749052012[343] = 0;
   out_6579876420749052012[344] = 0;
   out_6579876420749052012[345] = 0;
   out_6579876420749052012[346] = 0;
   out_6579876420749052012[347] = 0;
   out_6579876420749052012[348] = 0;
   out_6579876420749052012[349] = 0;
   out_6579876420749052012[350] = 0;
   out_6579876420749052012[351] = 1.0;
   out_6579876420749052012[352] = 0;
   out_6579876420749052012[353] = 0;
   out_6579876420749052012[354] = 0;
   out_6579876420749052012[355] = 0;
   out_6579876420749052012[356] = 0;
   out_6579876420749052012[357] = 0;
   out_6579876420749052012[358] = 0;
   out_6579876420749052012[359] = 0;
   out_6579876420749052012[360] = 0;
   out_6579876420749052012[361] = 0;
   out_6579876420749052012[362] = 0;
   out_6579876420749052012[363] = 0;
   out_6579876420749052012[364] = 0;
   out_6579876420749052012[365] = 0;
   out_6579876420749052012[366] = 0;
   out_6579876420749052012[367] = 0;
   out_6579876420749052012[368] = 0;
   out_6579876420749052012[369] = 0;
   out_6579876420749052012[370] = 0;
   out_6579876420749052012[371] = 0;
   out_6579876420749052012[372] = 0;
   out_6579876420749052012[373] = 1.0;
   out_6579876420749052012[374] = 0;
   out_6579876420749052012[375] = 0;
   out_6579876420749052012[376] = 0;
   out_6579876420749052012[377] = 0;
   out_6579876420749052012[378] = 0;
   out_6579876420749052012[379] = 0;
   out_6579876420749052012[380] = 0;
   out_6579876420749052012[381] = 0;
   out_6579876420749052012[382] = 0;
   out_6579876420749052012[383] = 0;
   out_6579876420749052012[384] = 0;
   out_6579876420749052012[385] = 0;
   out_6579876420749052012[386] = 0;
   out_6579876420749052012[387] = 0;
   out_6579876420749052012[388] = 0;
   out_6579876420749052012[389] = 0;
   out_6579876420749052012[390] = 0;
   out_6579876420749052012[391] = 0;
   out_6579876420749052012[392] = 0;
   out_6579876420749052012[393] = 0;
   out_6579876420749052012[394] = 0;
   out_6579876420749052012[395] = 1.0;
   out_6579876420749052012[396] = 0;
   out_6579876420749052012[397] = 0;
   out_6579876420749052012[398] = 0;
   out_6579876420749052012[399] = 0;
   out_6579876420749052012[400] = 0;
   out_6579876420749052012[401] = 0;
   out_6579876420749052012[402] = 0;
   out_6579876420749052012[403] = 0;
   out_6579876420749052012[404] = 0;
   out_6579876420749052012[405] = 0;
   out_6579876420749052012[406] = 0;
   out_6579876420749052012[407] = 0;
   out_6579876420749052012[408] = 0;
   out_6579876420749052012[409] = 0;
   out_6579876420749052012[410] = 0;
   out_6579876420749052012[411] = 0;
   out_6579876420749052012[412] = 0;
   out_6579876420749052012[413] = 0;
   out_6579876420749052012[414] = 0;
   out_6579876420749052012[415] = 0;
   out_6579876420749052012[416] = 0;
   out_6579876420749052012[417] = 1.0;
   out_6579876420749052012[418] = 0;
   out_6579876420749052012[419] = 0;
   out_6579876420749052012[420] = 0;
   out_6579876420749052012[421] = 0;
   out_6579876420749052012[422] = 0;
   out_6579876420749052012[423] = 0;
   out_6579876420749052012[424] = 0;
   out_6579876420749052012[425] = 0;
   out_6579876420749052012[426] = 0;
   out_6579876420749052012[427] = 0;
   out_6579876420749052012[428] = 0;
   out_6579876420749052012[429] = 0;
   out_6579876420749052012[430] = 0;
   out_6579876420749052012[431] = 0;
   out_6579876420749052012[432] = 0;
   out_6579876420749052012[433] = 0;
   out_6579876420749052012[434] = 0;
   out_6579876420749052012[435] = 0;
   out_6579876420749052012[436] = 0;
   out_6579876420749052012[437] = 0;
   out_6579876420749052012[438] = 0;
   out_6579876420749052012[439] = 1.0;
   out_6579876420749052012[440] = 0;
   out_6579876420749052012[441] = 0;
   out_6579876420749052012[442] = 0;
   out_6579876420749052012[443] = 0;
   out_6579876420749052012[444] = 0;
   out_6579876420749052012[445] = 0;
   out_6579876420749052012[446] = 0;
   out_6579876420749052012[447] = 0;
   out_6579876420749052012[448] = 0;
   out_6579876420749052012[449] = 0;
   out_6579876420749052012[450] = 0;
   out_6579876420749052012[451] = 0;
   out_6579876420749052012[452] = 0;
   out_6579876420749052012[453] = 0;
   out_6579876420749052012[454] = 0;
   out_6579876420749052012[455] = 0;
   out_6579876420749052012[456] = 0;
   out_6579876420749052012[457] = 0;
   out_6579876420749052012[458] = 0;
   out_6579876420749052012[459] = 0;
   out_6579876420749052012[460] = 0;
   out_6579876420749052012[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3659162376472982505) {
   out_3659162376472982505[0] = dt*state[7] + state[0];
   out_3659162376472982505[1] = dt*state[8] + state[1];
   out_3659162376472982505[2] = dt*state[9] + state[2];
   out_3659162376472982505[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3659162376472982505[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3659162376472982505[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3659162376472982505[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3659162376472982505[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3659162376472982505[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3659162376472982505[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3659162376472982505[10] = state[10];
   out_3659162376472982505[11] = state[11];
   out_3659162376472982505[12] = state[12];
   out_3659162376472982505[13] = state[13];
   out_3659162376472982505[14] = state[14];
   out_3659162376472982505[15] = state[15];
   out_3659162376472982505[16] = state[16];
   out_3659162376472982505[17] = state[17];
   out_3659162376472982505[18] = state[18];
   out_3659162376472982505[19] = state[19];
   out_3659162376472982505[20] = state[20];
   out_3659162376472982505[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4600865459334655732) {
   out_4600865459334655732[0] = 1;
   out_4600865459334655732[1] = 0;
   out_4600865459334655732[2] = 0;
   out_4600865459334655732[3] = 0;
   out_4600865459334655732[4] = 0;
   out_4600865459334655732[5] = 0;
   out_4600865459334655732[6] = dt;
   out_4600865459334655732[7] = 0;
   out_4600865459334655732[8] = 0;
   out_4600865459334655732[9] = 0;
   out_4600865459334655732[10] = 0;
   out_4600865459334655732[11] = 0;
   out_4600865459334655732[12] = 0;
   out_4600865459334655732[13] = 0;
   out_4600865459334655732[14] = 0;
   out_4600865459334655732[15] = 0;
   out_4600865459334655732[16] = 0;
   out_4600865459334655732[17] = 0;
   out_4600865459334655732[18] = 0;
   out_4600865459334655732[19] = 0;
   out_4600865459334655732[20] = 0;
   out_4600865459334655732[21] = 0;
   out_4600865459334655732[22] = 1;
   out_4600865459334655732[23] = 0;
   out_4600865459334655732[24] = 0;
   out_4600865459334655732[25] = 0;
   out_4600865459334655732[26] = 0;
   out_4600865459334655732[27] = 0;
   out_4600865459334655732[28] = dt;
   out_4600865459334655732[29] = 0;
   out_4600865459334655732[30] = 0;
   out_4600865459334655732[31] = 0;
   out_4600865459334655732[32] = 0;
   out_4600865459334655732[33] = 0;
   out_4600865459334655732[34] = 0;
   out_4600865459334655732[35] = 0;
   out_4600865459334655732[36] = 0;
   out_4600865459334655732[37] = 0;
   out_4600865459334655732[38] = 0;
   out_4600865459334655732[39] = 0;
   out_4600865459334655732[40] = 0;
   out_4600865459334655732[41] = 0;
   out_4600865459334655732[42] = 0;
   out_4600865459334655732[43] = 0;
   out_4600865459334655732[44] = 1;
   out_4600865459334655732[45] = 0;
   out_4600865459334655732[46] = 0;
   out_4600865459334655732[47] = 0;
   out_4600865459334655732[48] = 0;
   out_4600865459334655732[49] = 0;
   out_4600865459334655732[50] = dt;
   out_4600865459334655732[51] = 0;
   out_4600865459334655732[52] = 0;
   out_4600865459334655732[53] = 0;
   out_4600865459334655732[54] = 0;
   out_4600865459334655732[55] = 0;
   out_4600865459334655732[56] = 0;
   out_4600865459334655732[57] = 0;
   out_4600865459334655732[58] = 0;
   out_4600865459334655732[59] = 0;
   out_4600865459334655732[60] = 0;
   out_4600865459334655732[61] = 0;
   out_4600865459334655732[62] = 0;
   out_4600865459334655732[63] = 0;
   out_4600865459334655732[64] = 0;
   out_4600865459334655732[65] = 0;
   out_4600865459334655732[66] = 1;
   out_4600865459334655732[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4600865459334655732[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4600865459334655732[69] = 0;
   out_4600865459334655732[70] = 0;
   out_4600865459334655732[71] = 0;
   out_4600865459334655732[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4600865459334655732[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4600865459334655732[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4600865459334655732[75] = 0;
   out_4600865459334655732[76] = 0;
   out_4600865459334655732[77] = 0;
   out_4600865459334655732[78] = 0;
   out_4600865459334655732[79] = 0;
   out_4600865459334655732[80] = 0;
   out_4600865459334655732[81] = 0;
   out_4600865459334655732[82] = 0;
   out_4600865459334655732[83] = 0;
   out_4600865459334655732[84] = 0;
   out_4600865459334655732[85] = 0;
   out_4600865459334655732[86] = 0;
   out_4600865459334655732[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4600865459334655732[88] = 1;
   out_4600865459334655732[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4600865459334655732[90] = 0;
   out_4600865459334655732[91] = 0;
   out_4600865459334655732[92] = 0;
   out_4600865459334655732[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4600865459334655732[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4600865459334655732[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4600865459334655732[96] = 0;
   out_4600865459334655732[97] = 0;
   out_4600865459334655732[98] = 0;
   out_4600865459334655732[99] = 0;
   out_4600865459334655732[100] = 0;
   out_4600865459334655732[101] = 0;
   out_4600865459334655732[102] = 0;
   out_4600865459334655732[103] = 0;
   out_4600865459334655732[104] = 0;
   out_4600865459334655732[105] = 0;
   out_4600865459334655732[106] = 0;
   out_4600865459334655732[107] = 0;
   out_4600865459334655732[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4600865459334655732[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4600865459334655732[110] = 1;
   out_4600865459334655732[111] = 0;
   out_4600865459334655732[112] = 0;
   out_4600865459334655732[113] = 0;
   out_4600865459334655732[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4600865459334655732[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4600865459334655732[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4600865459334655732[117] = 0;
   out_4600865459334655732[118] = 0;
   out_4600865459334655732[119] = 0;
   out_4600865459334655732[120] = 0;
   out_4600865459334655732[121] = 0;
   out_4600865459334655732[122] = 0;
   out_4600865459334655732[123] = 0;
   out_4600865459334655732[124] = 0;
   out_4600865459334655732[125] = 0;
   out_4600865459334655732[126] = 0;
   out_4600865459334655732[127] = 0;
   out_4600865459334655732[128] = 0;
   out_4600865459334655732[129] = 0;
   out_4600865459334655732[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4600865459334655732[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4600865459334655732[132] = 1;
   out_4600865459334655732[133] = 0;
   out_4600865459334655732[134] = 0;
   out_4600865459334655732[135] = 0;
   out_4600865459334655732[136] = 0;
   out_4600865459334655732[137] = 0;
   out_4600865459334655732[138] = 0;
   out_4600865459334655732[139] = 0;
   out_4600865459334655732[140] = 0;
   out_4600865459334655732[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4600865459334655732[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4600865459334655732[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4600865459334655732[144] = 0;
   out_4600865459334655732[145] = 0;
   out_4600865459334655732[146] = 0;
   out_4600865459334655732[147] = 0;
   out_4600865459334655732[148] = 0;
   out_4600865459334655732[149] = 0;
   out_4600865459334655732[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4600865459334655732[151] = 0;
   out_4600865459334655732[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4600865459334655732[153] = 0;
   out_4600865459334655732[154] = 1;
   out_4600865459334655732[155] = 0;
   out_4600865459334655732[156] = 0;
   out_4600865459334655732[157] = 0;
   out_4600865459334655732[158] = 0;
   out_4600865459334655732[159] = 0;
   out_4600865459334655732[160] = 0;
   out_4600865459334655732[161] = 0;
   out_4600865459334655732[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4600865459334655732[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4600865459334655732[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4600865459334655732[165] = 0;
   out_4600865459334655732[166] = 0;
   out_4600865459334655732[167] = 0;
   out_4600865459334655732[168] = 0;
   out_4600865459334655732[169] = 0;
   out_4600865459334655732[170] = 0;
   out_4600865459334655732[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4600865459334655732[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4600865459334655732[173] = 0;
   out_4600865459334655732[174] = 0;
   out_4600865459334655732[175] = 0;
   out_4600865459334655732[176] = 1;
   out_4600865459334655732[177] = 0;
   out_4600865459334655732[178] = 0;
   out_4600865459334655732[179] = 0;
   out_4600865459334655732[180] = 0;
   out_4600865459334655732[181] = 0;
   out_4600865459334655732[182] = 0;
   out_4600865459334655732[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4600865459334655732[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4600865459334655732[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4600865459334655732[186] = 0;
   out_4600865459334655732[187] = 0;
   out_4600865459334655732[188] = 0;
   out_4600865459334655732[189] = 0;
   out_4600865459334655732[190] = 0;
   out_4600865459334655732[191] = 0;
   out_4600865459334655732[192] = 0;
   out_4600865459334655732[193] = 0;
   out_4600865459334655732[194] = 0;
   out_4600865459334655732[195] = 0;
   out_4600865459334655732[196] = 0;
   out_4600865459334655732[197] = 0;
   out_4600865459334655732[198] = 1;
   out_4600865459334655732[199] = 0;
   out_4600865459334655732[200] = 0;
   out_4600865459334655732[201] = 0;
   out_4600865459334655732[202] = 0;
   out_4600865459334655732[203] = 0;
   out_4600865459334655732[204] = 0;
   out_4600865459334655732[205] = 0;
   out_4600865459334655732[206] = 0;
   out_4600865459334655732[207] = 0;
   out_4600865459334655732[208] = 0;
   out_4600865459334655732[209] = 0;
   out_4600865459334655732[210] = 0;
   out_4600865459334655732[211] = 0;
   out_4600865459334655732[212] = 0;
   out_4600865459334655732[213] = 0;
   out_4600865459334655732[214] = 0;
   out_4600865459334655732[215] = 0;
   out_4600865459334655732[216] = 0;
   out_4600865459334655732[217] = 0;
   out_4600865459334655732[218] = 0;
   out_4600865459334655732[219] = 0;
   out_4600865459334655732[220] = 1;
   out_4600865459334655732[221] = 0;
   out_4600865459334655732[222] = 0;
   out_4600865459334655732[223] = 0;
   out_4600865459334655732[224] = 0;
   out_4600865459334655732[225] = 0;
   out_4600865459334655732[226] = 0;
   out_4600865459334655732[227] = 0;
   out_4600865459334655732[228] = 0;
   out_4600865459334655732[229] = 0;
   out_4600865459334655732[230] = 0;
   out_4600865459334655732[231] = 0;
   out_4600865459334655732[232] = 0;
   out_4600865459334655732[233] = 0;
   out_4600865459334655732[234] = 0;
   out_4600865459334655732[235] = 0;
   out_4600865459334655732[236] = 0;
   out_4600865459334655732[237] = 0;
   out_4600865459334655732[238] = 0;
   out_4600865459334655732[239] = 0;
   out_4600865459334655732[240] = 0;
   out_4600865459334655732[241] = 0;
   out_4600865459334655732[242] = 1;
   out_4600865459334655732[243] = 0;
   out_4600865459334655732[244] = 0;
   out_4600865459334655732[245] = 0;
   out_4600865459334655732[246] = 0;
   out_4600865459334655732[247] = 0;
   out_4600865459334655732[248] = 0;
   out_4600865459334655732[249] = 0;
   out_4600865459334655732[250] = 0;
   out_4600865459334655732[251] = 0;
   out_4600865459334655732[252] = 0;
   out_4600865459334655732[253] = 0;
   out_4600865459334655732[254] = 0;
   out_4600865459334655732[255] = 0;
   out_4600865459334655732[256] = 0;
   out_4600865459334655732[257] = 0;
   out_4600865459334655732[258] = 0;
   out_4600865459334655732[259] = 0;
   out_4600865459334655732[260] = 0;
   out_4600865459334655732[261] = 0;
   out_4600865459334655732[262] = 0;
   out_4600865459334655732[263] = 0;
   out_4600865459334655732[264] = 1;
   out_4600865459334655732[265] = 0;
   out_4600865459334655732[266] = 0;
   out_4600865459334655732[267] = 0;
   out_4600865459334655732[268] = 0;
   out_4600865459334655732[269] = 0;
   out_4600865459334655732[270] = 0;
   out_4600865459334655732[271] = 0;
   out_4600865459334655732[272] = 0;
   out_4600865459334655732[273] = 0;
   out_4600865459334655732[274] = 0;
   out_4600865459334655732[275] = 0;
   out_4600865459334655732[276] = 0;
   out_4600865459334655732[277] = 0;
   out_4600865459334655732[278] = 0;
   out_4600865459334655732[279] = 0;
   out_4600865459334655732[280] = 0;
   out_4600865459334655732[281] = 0;
   out_4600865459334655732[282] = 0;
   out_4600865459334655732[283] = 0;
   out_4600865459334655732[284] = 0;
   out_4600865459334655732[285] = 0;
   out_4600865459334655732[286] = 1;
   out_4600865459334655732[287] = 0;
   out_4600865459334655732[288] = 0;
   out_4600865459334655732[289] = 0;
   out_4600865459334655732[290] = 0;
   out_4600865459334655732[291] = 0;
   out_4600865459334655732[292] = 0;
   out_4600865459334655732[293] = 0;
   out_4600865459334655732[294] = 0;
   out_4600865459334655732[295] = 0;
   out_4600865459334655732[296] = 0;
   out_4600865459334655732[297] = 0;
   out_4600865459334655732[298] = 0;
   out_4600865459334655732[299] = 0;
   out_4600865459334655732[300] = 0;
   out_4600865459334655732[301] = 0;
   out_4600865459334655732[302] = 0;
   out_4600865459334655732[303] = 0;
   out_4600865459334655732[304] = 0;
   out_4600865459334655732[305] = 0;
   out_4600865459334655732[306] = 0;
   out_4600865459334655732[307] = 0;
   out_4600865459334655732[308] = 1;
   out_4600865459334655732[309] = 0;
   out_4600865459334655732[310] = 0;
   out_4600865459334655732[311] = 0;
   out_4600865459334655732[312] = 0;
   out_4600865459334655732[313] = 0;
   out_4600865459334655732[314] = 0;
   out_4600865459334655732[315] = 0;
   out_4600865459334655732[316] = 0;
   out_4600865459334655732[317] = 0;
   out_4600865459334655732[318] = 0;
   out_4600865459334655732[319] = 0;
   out_4600865459334655732[320] = 0;
   out_4600865459334655732[321] = 0;
   out_4600865459334655732[322] = 0;
   out_4600865459334655732[323] = 0;
   out_4600865459334655732[324] = 0;
   out_4600865459334655732[325] = 0;
   out_4600865459334655732[326] = 0;
   out_4600865459334655732[327] = 0;
   out_4600865459334655732[328] = 0;
   out_4600865459334655732[329] = 0;
   out_4600865459334655732[330] = 1;
   out_4600865459334655732[331] = 0;
   out_4600865459334655732[332] = 0;
   out_4600865459334655732[333] = 0;
   out_4600865459334655732[334] = 0;
   out_4600865459334655732[335] = 0;
   out_4600865459334655732[336] = 0;
   out_4600865459334655732[337] = 0;
   out_4600865459334655732[338] = 0;
   out_4600865459334655732[339] = 0;
   out_4600865459334655732[340] = 0;
   out_4600865459334655732[341] = 0;
   out_4600865459334655732[342] = 0;
   out_4600865459334655732[343] = 0;
   out_4600865459334655732[344] = 0;
   out_4600865459334655732[345] = 0;
   out_4600865459334655732[346] = 0;
   out_4600865459334655732[347] = 0;
   out_4600865459334655732[348] = 0;
   out_4600865459334655732[349] = 0;
   out_4600865459334655732[350] = 0;
   out_4600865459334655732[351] = 0;
   out_4600865459334655732[352] = 1;
   out_4600865459334655732[353] = 0;
   out_4600865459334655732[354] = 0;
   out_4600865459334655732[355] = 0;
   out_4600865459334655732[356] = 0;
   out_4600865459334655732[357] = 0;
   out_4600865459334655732[358] = 0;
   out_4600865459334655732[359] = 0;
   out_4600865459334655732[360] = 0;
   out_4600865459334655732[361] = 0;
   out_4600865459334655732[362] = 0;
   out_4600865459334655732[363] = 0;
   out_4600865459334655732[364] = 0;
   out_4600865459334655732[365] = 0;
   out_4600865459334655732[366] = 0;
   out_4600865459334655732[367] = 0;
   out_4600865459334655732[368] = 0;
   out_4600865459334655732[369] = 0;
   out_4600865459334655732[370] = 0;
   out_4600865459334655732[371] = 0;
   out_4600865459334655732[372] = 0;
   out_4600865459334655732[373] = 0;
   out_4600865459334655732[374] = 1;
   out_4600865459334655732[375] = 0;
   out_4600865459334655732[376] = 0;
   out_4600865459334655732[377] = 0;
   out_4600865459334655732[378] = 0;
   out_4600865459334655732[379] = 0;
   out_4600865459334655732[380] = 0;
   out_4600865459334655732[381] = 0;
   out_4600865459334655732[382] = 0;
   out_4600865459334655732[383] = 0;
   out_4600865459334655732[384] = 0;
   out_4600865459334655732[385] = 0;
   out_4600865459334655732[386] = 0;
   out_4600865459334655732[387] = 0;
   out_4600865459334655732[388] = 0;
   out_4600865459334655732[389] = 0;
   out_4600865459334655732[390] = 0;
   out_4600865459334655732[391] = 0;
   out_4600865459334655732[392] = 0;
   out_4600865459334655732[393] = 0;
   out_4600865459334655732[394] = 0;
   out_4600865459334655732[395] = 0;
   out_4600865459334655732[396] = 1;
   out_4600865459334655732[397] = 0;
   out_4600865459334655732[398] = 0;
   out_4600865459334655732[399] = 0;
   out_4600865459334655732[400] = 0;
   out_4600865459334655732[401] = 0;
   out_4600865459334655732[402] = 0;
   out_4600865459334655732[403] = 0;
   out_4600865459334655732[404] = 0;
   out_4600865459334655732[405] = 0;
   out_4600865459334655732[406] = 0;
   out_4600865459334655732[407] = 0;
   out_4600865459334655732[408] = 0;
   out_4600865459334655732[409] = 0;
   out_4600865459334655732[410] = 0;
   out_4600865459334655732[411] = 0;
   out_4600865459334655732[412] = 0;
   out_4600865459334655732[413] = 0;
   out_4600865459334655732[414] = 0;
   out_4600865459334655732[415] = 0;
   out_4600865459334655732[416] = 0;
   out_4600865459334655732[417] = 0;
   out_4600865459334655732[418] = 1;
   out_4600865459334655732[419] = 0;
   out_4600865459334655732[420] = 0;
   out_4600865459334655732[421] = 0;
   out_4600865459334655732[422] = 0;
   out_4600865459334655732[423] = 0;
   out_4600865459334655732[424] = 0;
   out_4600865459334655732[425] = 0;
   out_4600865459334655732[426] = 0;
   out_4600865459334655732[427] = 0;
   out_4600865459334655732[428] = 0;
   out_4600865459334655732[429] = 0;
   out_4600865459334655732[430] = 0;
   out_4600865459334655732[431] = 0;
   out_4600865459334655732[432] = 0;
   out_4600865459334655732[433] = 0;
   out_4600865459334655732[434] = 0;
   out_4600865459334655732[435] = 0;
   out_4600865459334655732[436] = 0;
   out_4600865459334655732[437] = 0;
   out_4600865459334655732[438] = 0;
   out_4600865459334655732[439] = 0;
   out_4600865459334655732[440] = 1;
}
void h_4(double *state, double *unused, double *out_2796482808698657408) {
   out_2796482808698657408[0] = state[10] + state[13];
   out_2796482808698657408[1] = state[11] + state[14];
   out_2796482808698657408[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5953790806247218602) {
   out_5953790806247218602[0] = 0;
   out_5953790806247218602[1] = 0;
   out_5953790806247218602[2] = 0;
   out_5953790806247218602[3] = 0;
   out_5953790806247218602[4] = 0;
   out_5953790806247218602[5] = 0;
   out_5953790806247218602[6] = 0;
   out_5953790806247218602[7] = 0;
   out_5953790806247218602[8] = 0;
   out_5953790806247218602[9] = 0;
   out_5953790806247218602[10] = 1;
   out_5953790806247218602[11] = 0;
   out_5953790806247218602[12] = 0;
   out_5953790806247218602[13] = 1;
   out_5953790806247218602[14] = 0;
   out_5953790806247218602[15] = 0;
   out_5953790806247218602[16] = 0;
   out_5953790806247218602[17] = 0;
   out_5953790806247218602[18] = 0;
   out_5953790806247218602[19] = 0;
   out_5953790806247218602[20] = 0;
   out_5953790806247218602[21] = 0;
   out_5953790806247218602[22] = 0;
   out_5953790806247218602[23] = 0;
   out_5953790806247218602[24] = 0;
   out_5953790806247218602[25] = 0;
   out_5953790806247218602[26] = 0;
   out_5953790806247218602[27] = 0;
   out_5953790806247218602[28] = 0;
   out_5953790806247218602[29] = 0;
   out_5953790806247218602[30] = 0;
   out_5953790806247218602[31] = 0;
   out_5953790806247218602[32] = 0;
   out_5953790806247218602[33] = 1;
   out_5953790806247218602[34] = 0;
   out_5953790806247218602[35] = 0;
   out_5953790806247218602[36] = 1;
   out_5953790806247218602[37] = 0;
   out_5953790806247218602[38] = 0;
   out_5953790806247218602[39] = 0;
   out_5953790806247218602[40] = 0;
   out_5953790806247218602[41] = 0;
   out_5953790806247218602[42] = 0;
   out_5953790806247218602[43] = 0;
   out_5953790806247218602[44] = 0;
   out_5953790806247218602[45] = 0;
   out_5953790806247218602[46] = 0;
   out_5953790806247218602[47] = 0;
   out_5953790806247218602[48] = 0;
   out_5953790806247218602[49] = 0;
   out_5953790806247218602[50] = 0;
   out_5953790806247218602[51] = 0;
   out_5953790806247218602[52] = 0;
   out_5953790806247218602[53] = 0;
   out_5953790806247218602[54] = 0;
   out_5953790806247218602[55] = 0;
   out_5953790806247218602[56] = 1;
   out_5953790806247218602[57] = 0;
   out_5953790806247218602[58] = 0;
   out_5953790806247218602[59] = 1;
   out_5953790806247218602[60] = 0;
   out_5953790806247218602[61] = 0;
   out_5953790806247218602[62] = 0;
   out_5953790806247218602[63] = 0;
   out_5953790806247218602[64] = 0;
   out_5953790806247218602[65] = 0;
}
void h_9(double *state, double *unused, double *out_7894829364926935980) {
   out_7894829364926935980[0] = state[10];
   out_7894829364926935980[1] = state[11];
   out_7894829364926935980[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6194980452876809247) {
   out_6194980452876809247[0] = 0;
   out_6194980452876809247[1] = 0;
   out_6194980452876809247[2] = 0;
   out_6194980452876809247[3] = 0;
   out_6194980452876809247[4] = 0;
   out_6194980452876809247[5] = 0;
   out_6194980452876809247[6] = 0;
   out_6194980452876809247[7] = 0;
   out_6194980452876809247[8] = 0;
   out_6194980452876809247[9] = 0;
   out_6194980452876809247[10] = 1;
   out_6194980452876809247[11] = 0;
   out_6194980452876809247[12] = 0;
   out_6194980452876809247[13] = 0;
   out_6194980452876809247[14] = 0;
   out_6194980452876809247[15] = 0;
   out_6194980452876809247[16] = 0;
   out_6194980452876809247[17] = 0;
   out_6194980452876809247[18] = 0;
   out_6194980452876809247[19] = 0;
   out_6194980452876809247[20] = 0;
   out_6194980452876809247[21] = 0;
   out_6194980452876809247[22] = 0;
   out_6194980452876809247[23] = 0;
   out_6194980452876809247[24] = 0;
   out_6194980452876809247[25] = 0;
   out_6194980452876809247[26] = 0;
   out_6194980452876809247[27] = 0;
   out_6194980452876809247[28] = 0;
   out_6194980452876809247[29] = 0;
   out_6194980452876809247[30] = 0;
   out_6194980452876809247[31] = 0;
   out_6194980452876809247[32] = 0;
   out_6194980452876809247[33] = 1;
   out_6194980452876809247[34] = 0;
   out_6194980452876809247[35] = 0;
   out_6194980452876809247[36] = 0;
   out_6194980452876809247[37] = 0;
   out_6194980452876809247[38] = 0;
   out_6194980452876809247[39] = 0;
   out_6194980452876809247[40] = 0;
   out_6194980452876809247[41] = 0;
   out_6194980452876809247[42] = 0;
   out_6194980452876809247[43] = 0;
   out_6194980452876809247[44] = 0;
   out_6194980452876809247[45] = 0;
   out_6194980452876809247[46] = 0;
   out_6194980452876809247[47] = 0;
   out_6194980452876809247[48] = 0;
   out_6194980452876809247[49] = 0;
   out_6194980452876809247[50] = 0;
   out_6194980452876809247[51] = 0;
   out_6194980452876809247[52] = 0;
   out_6194980452876809247[53] = 0;
   out_6194980452876809247[54] = 0;
   out_6194980452876809247[55] = 0;
   out_6194980452876809247[56] = 1;
   out_6194980452876809247[57] = 0;
   out_6194980452876809247[58] = 0;
   out_6194980452876809247[59] = 0;
   out_6194980452876809247[60] = 0;
   out_6194980452876809247[61] = 0;
   out_6194980452876809247[62] = 0;
   out_6194980452876809247[63] = 0;
   out_6194980452876809247[64] = 0;
   out_6194980452876809247[65] = 0;
}
void h_10(double *state, double *unused, double *out_8392480068734059084) {
   out_8392480068734059084[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8392480068734059084[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8392480068734059084[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8023184458012303454) {
   out_8023184458012303454[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8023184458012303454[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8023184458012303454[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8023184458012303454[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8023184458012303454[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8023184458012303454[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8023184458012303454[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8023184458012303454[7] = 0;
   out_8023184458012303454[8] = 0;
   out_8023184458012303454[9] = 0;
   out_8023184458012303454[10] = 0;
   out_8023184458012303454[11] = 0;
   out_8023184458012303454[12] = 0;
   out_8023184458012303454[13] = 0;
   out_8023184458012303454[14] = 0;
   out_8023184458012303454[15] = 0;
   out_8023184458012303454[16] = 1;
   out_8023184458012303454[17] = 0;
   out_8023184458012303454[18] = 0;
   out_8023184458012303454[19] = 1;
   out_8023184458012303454[20] = 0;
   out_8023184458012303454[21] = 0;
   out_8023184458012303454[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8023184458012303454[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8023184458012303454[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8023184458012303454[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8023184458012303454[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8023184458012303454[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8023184458012303454[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8023184458012303454[29] = 0;
   out_8023184458012303454[30] = 0;
   out_8023184458012303454[31] = 0;
   out_8023184458012303454[32] = 0;
   out_8023184458012303454[33] = 0;
   out_8023184458012303454[34] = 0;
   out_8023184458012303454[35] = 0;
   out_8023184458012303454[36] = 0;
   out_8023184458012303454[37] = 0;
   out_8023184458012303454[38] = 0;
   out_8023184458012303454[39] = 1;
   out_8023184458012303454[40] = 0;
   out_8023184458012303454[41] = 0;
   out_8023184458012303454[42] = 1;
   out_8023184458012303454[43] = 0;
   out_8023184458012303454[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8023184458012303454[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8023184458012303454[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8023184458012303454[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8023184458012303454[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8023184458012303454[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8023184458012303454[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8023184458012303454[51] = 0;
   out_8023184458012303454[52] = 0;
   out_8023184458012303454[53] = 0;
   out_8023184458012303454[54] = 0;
   out_8023184458012303454[55] = 0;
   out_8023184458012303454[56] = 0;
   out_8023184458012303454[57] = 0;
   out_8023184458012303454[58] = 0;
   out_8023184458012303454[59] = 0;
   out_8023184458012303454[60] = 0;
   out_8023184458012303454[61] = 0;
   out_8023184458012303454[62] = 1;
   out_8023184458012303454[63] = 0;
   out_8023184458012303454[64] = 0;
   out_8023184458012303454[65] = 1;
}
void h_12(double *state, double *unused, double *out_3668127217955138174) {
   out_3668127217955138174[0] = state[0];
   out_3668127217955138174[1] = state[1];
   out_3668127217955138174[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6574889831294812269) {
   out_6574889831294812269[0] = 1;
   out_6574889831294812269[1] = 0;
   out_6574889831294812269[2] = 0;
   out_6574889831294812269[3] = 0;
   out_6574889831294812269[4] = 0;
   out_6574889831294812269[5] = 0;
   out_6574889831294812269[6] = 0;
   out_6574889831294812269[7] = 0;
   out_6574889831294812269[8] = 0;
   out_6574889831294812269[9] = 0;
   out_6574889831294812269[10] = 0;
   out_6574889831294812269[11] = 0;
   out_6574889831294812269[12] = 0;
   out_6574889831294812269[13] = 0;
   out_6574889831294812269[14] = 0;
   out_6574889831294812269[15] = 0;
   out_6574889831294812269[16] = 0;
   out_6574889831294812269[17] = 0;
   out_6574889831294812269[18] = 0;
   out_6574889831294812269[19] = 0;
   out_6574889831294812269[20] = 0;
   out_6574889831294812269[21] = 0;
   out_6574889831294812269[22] = 0;
   out_6574889831294812269[23] = 1;
   out_6574889831294812269[24] = 0;
   out_6574889831294812269[25] = 0;
   out_6574889831294812269[26] = 0;
   out_6574889831294812269[27] = 0;
   out_6574889831294812269[28] = 0;
   out_6574889831294812269[29] = 0;
   out_6574889831294812269[30] = 0;
   out_6574889831294812269[31] = 0;
   out_6574889831294812269[32] = 0;
   out_6574889831294812269[33] = 0;
   out_6574889831294812269[34] = 0;
   out_6574889831294812269[35] = 0;
   out_6574889831294812269[36] = 0;
   out_6574889831294812269[37] = 0;
   out_6574889831294812269[38] = 0;
   out_6574889831294812269[39] = 0;
   out_6574889831294812269[40] = 0;
   out_6574889831294812269[41] = 0;
   out_6574889831294812269[42] = 0;
   out_6574889831294812269[43] = 0;
   out_6574889831294812269[44] = 0;
   out_6574889831294812269[45] = 0;
   out_6574889831294812269[46] = 1;
   out_6574889831294812269[47] = 0;
   out_6574889831294812269[48] = 0;
   out_6574889831294812269[49] = 0;
   out_6574889831294812269[50] = 0;
   out_6574889831294812269[51] = 0;
   out_6574889831294812269[52] = 0;
   out_6574889831294812269[53] = 0;
   out_6574889831294812269[54] = 0;
   out_6574889831294812269[55] = 0;
   out_6574889831294812269[56] = 0;
   out_6574889831294812269[57] = 0;
   out_6574889831294812269[58] = 0;
   out_6574889831294812269[59] = 0;
   out_6574889831294812269[60] = 0;
   out_6574889831294812269[61] = 0;
   out_6574889831294812269[62] = 0;
   out_6574889831294812269[63] = 0;
   out_6574889831294812269[64] = 0;
   out_6574889831294812269[65] = 0;
}
void h_35(double *state, double *unused, double *out_7475238483394447684) {
   out_7475238483394447684[0] = state[7];
   out_7475238483394447684[1] = state[8];
   out_7475238483394447684[2] = state[9];
}
void H_35(double *state, double *unused, double *out_9126291210089725638) {
   out_9126291210089725638[0] = 0;
   out_9126291210089725638[1] = 0;
   out_9126291210089725638[2] = 0;
   out_9126291210089725638[3] = 0;
   out_9126291210089725638[4] = 0;
   out_9126291210089725638[5] = 0;
   out_9126291210089725638[6] = 0;
   out_9126291210089725638[7] = 1;
   out_9126291210089725638[8] = 0;
   out_9126291210089725638[9] = 0;
   out_9126291210089725638[10] = 0;
   out_9126291210089725638[11] = 0;
   out_9126291210089725638[12] = 0;
   out_9126291210089725638[13] = 0;
   out_9126291210089725638[14] = 0;
   out_9126291210089725638[15] = 0;
   out_9126291210089725638[16] = 0;
   out_9126291210089725638[17] = 0;
   out_9126291210089725638[18] = 0;
   out_9126291210089725638[19] = 0;
   out_9126291210089725638[20] = 0;
   out_9126291210089725638[21] = 0;
   out_9126291210089725638[22] = 0;
   out_9126291210089725638[23] = 0;
   out_9126291210089725638[24] = 0;
   out_9126291210089725638[25] = 0;
   out_9126291210089725638[26] = 0;
   out_9126291210089725638[27] = 0;
   out_9126291210089725638[28] = 0;
   out_9126291210089725638[29] = 0;
   out_9126291210089725638[30] = 1;
   out_9126291210089725638[31] = 0;
   out_9126291210089725638[32] = 0;
   out_9126291210089725638[33] = 0;
   out_9126291210089725638[34] = 0;
   out_9126291210089725638[35] = 0;
   out_9126291210089725638[36] = 0;
   out_9126291210089725638[37] = 0;
   out_9126291210089725638[38] = 0;
   out_9126291210089725638[39] = 0;
   out_9126291210089725638[40] = 0;
   out_9126291210089725638[41] = 0;
   out_9126291210089725638[42] = 0;
   out_9126291210089725638[43] = 0;
   out_9126291210089725638[44] = 0;
   out_9126291210089725638[45] = 0;
   out_9126291210089725638[46] = 0;
   out_9126291210089725638[47] = 0;
   out_9126291210089725638[48] = 0;
   out_9126291210089725638[49] = 0;
   out_9126291210089725638[50] = 0;
   out_9126291210089725638[51] = 0;
   out_9126291210089725638[52] = 0;
   out_9126291210089725638[53] = 1;
   out_9126291210089725638[54] = 0;
   out_9126291210089725638[55] = 0;
   out_9126291210089725638[56] = 0;
   out_9126291210089725638[57] = 0;
   out_9126291210089725638[58] = 0;
   out_9126291210089725638[59] = 0;
   out_9126291210089725638[60] = 0;
   out_9126291210089725638[61] = 0;
   out_9126291210089725638[62] = 0;
   out_9126291210089725638[63] = 0;
   out_9126291210089725638[64] = 0;
   out_9126291210089725638[65] = 0;
}
void h_32(double *state, double *unused, double *out_412463461389678539) {
   out_412463461389678539[0] = state[3];
   out_412463461389678539[1] = state[4];
   out_412463461389678539[2] = state[5];
   out_412463461389678539[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2405588359925709622) {
   out_2405588359925709622[0] = 0;
   out_2405588359925709622[1] = 0;
   out_2405588359925709622[2] = 0;
   out_2405588359925709622[3] = 1;
   out_2405588359925709622[4] = 0;
   out_2405588359925709622[5] = 0;
   out_2405588359925709622[6] = 0;
   out_2405588359925709622[7] = 0;
   out_2405588359925709622[8] = 0;
   out_2405588359925709622[9] = 0;
   out_2405588359925709622[10] = 0;
   out_2405588359925709622[11] = 0;
   out_2405588359925709622[12] = 0;
   out_2405588359925709622[13] = 0;
   out_2405588359925709622[14] = 0;
   out_2405588359925709622[15] = 0;
   out_2405588359925709622[16] = 0;
   out_2405588359925709622[17] = 0;
   out_2405588359925709622[18] = 0;
   out_2405588359925709622[19] = 0;
   out_2405588359925709622[20] = 0;
   out_2405588359925709622[21] = 0;
   out_2405588359925709622[22] = 0;
   out_2405588359925709622[23] = 0;
   out_2405588359925709622[24] = 0;
   out_2405588359925709622[25] = 0;
   out_2405588359925709622[26] = 1;
   out_2405588359925709622[27] = 0;
   out_2405588359925709622[28] = 0;
   out_2405588359925709622[29] = 0;
   out_2405588359925709622[30] = 0;
   out_2405588359925709622[31] = 0;
   out_2405588359925709622[32] = 0;
   out_2405588359925709622[33] = 0;
   out_2405588359925709622[34] = 0;
   out_2405588359925709622[35] = 0;
   out_2405588359925709622[36] = 0;
   out_2405588359925709622[37] = 0;
   out_2405588359925709622[38] = 0;
   out_2405588359925709622[39] = 0;
   out_2405588359925709622[40] = 0;
   out_2405588359925709622[41] = 0;
   out_2405588359925709622[42] = 0;
   out_2405588359925709622[43] = 0;
   out_2405588359925709622[44] = 0;
   out_2405588359925709622[45] = 0;
   out_2405588359925709622[46] = 0;
   out_2405588359925709622[47] = 0;
   out_2405588359925709622[48] = 0;
   out_2405588359925709622[49] = 1;
   out_2405588359925709622[50] = 0;
   out_2405588359925709622[51] = 0;
   out_2405588359925709622[52] = 0;
   out_2405588359925709622[53] = 0;
   out_2405588359925709622[54] = 0;
   out_2405588359925709622[55] = 0;
   out_2405588359925709622[56] = 0;
   out_2405588359925709622[57] = 0;
   out_2405588359925709622[58] = 0;
   out_2405588359925709622[59] = 0;
   out_2405588359925709622[60] = 0;
   out_2405588359925709622[61] = 0;
   out_2405588359925709622[62] = 0;
   out_2405588359925709622[63] = 0;
   out_2405588359925709622[64] = 0;
   out_2405588359925709622[65] = 0;
   out_2405588359925709622[66] = 0;
   out_2405588359925709622[67] = 0;
   out_2405588359925709622[68] = 0;
   out_2405588359925709622[69] = 0;
   out_2405588359925709622[70] = 0;
   out_2405588359925709622[71] = 0;
   out_2405588359925709622[72] = 1;
   out_2405588359925709622[73] = 0;
   out_2405588359925709622[74] = 0;
   out_2405588359925709622[75] = 0;
   out_2405588359925709622[76] = 0;
   out_2405588359925709622[77] = 0;
   out_2405588359925709622[78] = 0;
   out_2405588359925709622[79] = 0;
   out_2405588359925709622[80] = 0;
   out_2405588359925709622[81] = 0;
   out_2405588359925709622[82] = 0;
   out_2405588359925709622[83] = 0;
   out_2405588359925709622[84] = 0;
   out_2405588359925709622[85] = 0;
   out_2405588359925709622[86] = 0;
   out_2405588359925709622[87] = 0;
}
void h_13(double *state, double *unused, double *out_2678666661056351279) {
   out_2678666661056351279[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2678666661056351279[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2678666661056351279[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3784475594372073238) {
   out_3784475594372073238[0] = 0;
   out_3784475594372073238[1] = 0;
   out_3784475594372073238[2] = 0;
   out_3784475594372073238[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3784475594372073238[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3784475594372073238[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3784475594372073238[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3784475594372073238[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3784475594372073238[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3784475594372073238[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3784475594372073238[10] = 0;
   out_3784475594372073238[11] = 0;
   out_3784475594372073238[12] = 0;
   out_3784475594372073238[13] = 0;
   out_3784475594372073238[14] = 0;
   out_3784475594372073238[15] = 0;
   out_3784475594372073238[16] = 0;
   out_3784475594372073238[17] = 0;
   out_3784475594372073238[18] = 0;
   out_3784475594372073238[19] = 0;
   out_3784475594372073238[20] = 0;
   out_3784475594372073238[21] = 0;
   out_3784475594372073238[22] = 0;
   out_3784475594372073238[23] = 0;
   out_3784475594372073238[24] = 0;
   out_3784475594372073238[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3784475594372073238[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3784475594372073238[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3784475594372073238[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3784475594372073238[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3784475594372073238[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3784475594372073238[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3784475594372073238[32] = 0;
   out_3784475594372073238[33] = 0;
   out_3784475594372073238[34] = 0;
   out_3784475594372073238[35] = 0;
   out_3784475594372073238[36] = 0;
   out_3784475594372073238[37] = 0;
   out_3784475594372073238[38] = 0;
   out_3784475594372073238[39] = 0;
   out_3784475594372073238[40] = 0;
   out_3784475594372073238[41] = 0;
   out_3784475594372073238[42] = 0;
   out_3784475594372073238[43] = 0;
   out_3784475594372073238[44] = 0;
   out_3784475594372073238[45] = 0;
   out_3784475594372073238[46] = 0;
   out_3784475594372073238[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3784475594372073238[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3784475594372073238[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3784475594372073238[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3784475594372073238[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3784475594372073238[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3784475594372073238[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3784475594372073238[54] = 0;
   out_3784475594372073238[55] = 0;
   out_3784475594372073238[56] = 0;
   out_3784475594372073238[57] = 0;
   out_3784475594372073238[58] = 0;
   out_3784475594372073238[59] = 0;
   out_3784475594372073238[60] = 0;
   out_3784475594372073238[61] = 0;
   out_3784475594372073238[62] = 0;
   out_3784475594372073238[63] = 0;
   out_3784475594372073238[64] = 0;
   out_3784475594372073238[65] = 0;
}
void h_14(double *state, double *unused, double *out_7894829364926935980) {
   out_7894829364926935980[0] = state[10];
   out_7894829364926935980[1] = state[11];
   out_7894829364926935980[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6194980452876809247) {
   out_6194980452876809247[0] = 0;
   out_6194980452876809247[1] = 0;
   out_6194980452876809247[2] = 0;
   out_6194980452876809247[3] = 0;
   out_6194980452876809247[4] = 0;
   out_6194980452876809247[5] = 0;
   out_6194980452876809247[6] = 0;
   out_6194980452876809247[7] = 0;
   out_6194980452876809247[8] = 0;
   out_6194980452876809247[9] = 0;
   out_6194980452876809247[10] = 1;
   out_6194980452876809247[11] = 0;
   out_6194980452876809247[12] = 0;
   out_6194980452876809247[13] = 0;
   out_6194980452876809247[14] = 0;
   out_6194980452876809247[15] = 0;
   out_6194980452876809247[16] = 0;
   out_6194980452876809247[17] = 0;
   out_6194980452876809247[18] = 0;
   out_6194980452876809247[19] = 0;
   out_6194980452876809247[20] = 0;
   out_6194980452876809247[21] = 0;
   out_6194980452876809247[22] = 0;
   out_6194980452876809247[23] = 0;
   out_6194980452876809247[24] = 0;
   out_6194980452876809247[25] = 0;
   out_6194980452876809247[26] = 0;
   out_6194980452876809247[27] = 0;
   out_6194980452876809247[28] = 0;
   out_6194980452876809247[29] = 0;
   out_6194980452876809247[30] = 0;
   out_6194980452876809247[31] = 0;
   out_6194980452876809247[32] = 0;
   out_6194980452876809247[33] = 1;
   out_6194980452876809247[34] = 0;
   out_6194980452876809247[35] = 0;
   out_6194980452876809247[36] = 0;
   out_6194980452876809247[37] = 0;
   out_6194980452876809247[38] = 0;
   out_6194980452876809247[39] = 0;
   out_6194980452876809247[40] = 0;
   out_6194980452876809247[41] = 0;
   out_6194980452876809247[42] = 0;
   out_6194980452876809247[43] = 0;
   out_6194980452876809247[44] = 0;
   out_6194980452876809247[45] = 0;
   out_6194980452876809247[46] = 0;
   out_6194980452876809247[47] = 0;
   out_6194980452876809247[48] = 0;
   out_6194980452876809247[49] = 0;
   out_6194980452876809247[50] = 0;
   out_6194980452876809247[51] = 0;
   out_6194980452876809247[52] = 0;
   out_6194980452876809247[53] = 0;
   out_6194980452876809247[54] = 0;
   out_6194980452876809247[55] = 0;
   out_6194980452876809247[56] = 1;
   out_6194980452876809247[57] = 0;
   out_6194980452876809247[58] = 0;
   out_6194980452876809247[59] = 0;
   out_6194980452876809247[60] = 0;
   out_6194980452876809247[61] = 0;
   out_6194980452876809247[62] = 0;
   out_6194980452876809247[63] = 0;
   out_6194980452876809247[64] = 0;
   out_6194980452876809247[65] = 0;
}
void h_33(double *state, double *unused, double *out_1066723490886474754) {
   out_1066723490886474754[0] = state[16];
   out_1066723490886474754[1] = state[17];
   out_1066723490886474754[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5975734205450868034) {
   out_5975734205450868034[0] = 0;
   out_5975734205450868034[1] = 0;
   out_5975734205450868034[2] = 0;
   out_5975734205450868034[3] = 0;
   out_5975734205450868034[4] = 0;
   out_5975734205450868034[5] = 0;
   out_5975734205450868034[6] = 0;
   out_5975734205450868034[7] = 0;
   out_5975734205450868034[8] = 0;
   out_5975734205450868034[9] = 0;
   out_5975734205450868034[10] = 0;
   out_5975734205450868034[11] = 0;
   out_5975734205450868034[12] = 0;
   out_5975734205450868034[13] = 0;
   out_5975734205450868034[14] = 0;
   out_5975734205450868034[15] = 0;
   out_5975734205450868034[16] = 1;
   out_5975734205450868034[17] = 0;
   out_5975734205450868034[18] = 0;
   out_5975734205450868034[19] = 0;
   out_5975734205450868034[20] = 0;
   out_5975734205450868034[21] = 0;
   out_5975734205450868034[22] = 0;
   out_5975734205450868034[23] = 0;
   out_5975734205450868034[24] = 0;
   out_5975734205450868034[25] = 0;
   out_5975734205450868034[26] = 0;
   out_5975734205450868034[27] = 0;
   out_5975734205450868034[28] = 0;
   out_5975734205450868034[29] = 0;
   out_5975734205450868034[30] = 0;
   out_5975734205450868034[31] = 0;
   out_5975734205450868034[32] = 0;
   out_5975734205450868034[33] = 0;
   out_5975734205450868034[34] = 0;
   out_5975734205450868034[35] = 0;
   out_5975734205450868034[36] = 0;
   out_5975734205450868034[37] = 0;
   out_5975734205450868034[38] = 0;
   out_5975734205450868034[39] = 1;
   out_5975734205450868034[40] = 0;
   out_5975734205450868034[41] = 0;
   out_5975734205450868034[42] = 0;
   out_5975734205450868034[43] = 0;
   out_5975734205450868034[44] = 0;
   out_5975734205450868034[45] = 0;
   out_5975734205450868034[46] = 0;
   out_5975734205450868034[47] = 0;
   out_5975734205450868034[48] = 0;
   out_5975734205450868034[49] = 0;
   out_5975734205450868034[50] = 0;
   out_5975734205450868034[51] = 0;
   out_5975734205450868034[52] = 0;
   out_5975734205450868034[53] = 0;
   out_5975734205450868034[54] = 0;
   out_5975734205450868034[55] = 0;
   out_5975734205450868034[56] = 0;
   out_5975734205450868034[57] = 0;
   out_5975734205450868034[58] = 0;
   out_5975734205450868034[59] = 0;
   out_5975734205450868034[60] = 0;
   out_5975734205450868034[61] = 0;
   out_5975734205450868034[62] = 1;
   out_5975734205450868034[63] = 0;
   out_5975734205450868034[64] = 0;
   out_5975734205450868034[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8634487822663781268) {
  H(in_vec, out_8634487822663781268);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_783016460155138911) {
  err_fun(nom_x, delta_x, out_783016460155138911);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_106834797478900715) {
  inv_err_fun(nom_x, true_x, out_106834797478900715);
}
void live_H_mod_fun(double *state, double *out_6579876420749052012) {
  H_mod_fun(state, out_6579876420749052012);
}
void live_f_fun(double *state, double dt, double *out_3659162376472982505) {
  f_fun(state,  dt, out_3659162376472982505);
}
void live_F_fun(double *state, double dt, double *out_4600865459334655732) {
  F_fun(state,  dt, out_4600865459334655732);
}
void live_h_4(double *state, double *unused, double *out_2796482808698657408) {
  h_4(state, unused, out_2796482808698657408);
}
void live_H_4(double *state, double *unused, double *out_5953790806247218602) {
  H_4(state, unused, out_5953790806247218602);
}
void live_h_9(double *state, double *unused, double *out_7894829364926935980) {
  h_9(state, unused, out_7894829364926935980);
}
void live_H_9(double *state, double *unused, double *out_6194980452876809247) {
  H_9(state, unused, out_6194980452876809247);
}
void live_h_10(double *state, double *unused, double *out_8392480068734059084) {
  h_10(state, unused, out_8392480068734059084);
}
void live_H_10(double *state, double *unused, double *out_8023184458012303454) {
  H_10(state, unused, out_8023184458012303454);
}
void live_h_12(double *state, double *unused, double *out_3668127217955138174) {
  h_12(state, unused, out_3668127217955138174);
}
void live_H_12(double *state, double *unused, double *out_6574889831294812269) {
  H_12(state, unused, out_6574889831294812269);
}
void live_h_35(double *state, double *unused, double *out_7475238483394447684) {
  h_35(state, unused, out_7475238483394447684);
}
void live_H_35(double *state, double *unused, double *out_9126291210089725638) {
  H_35(state, unused, out_9126291210089725638);
}
void live_h_32(double *state, double *unused, double *out_412463461389678539) {
  h_32(state, unused, out_412463461389678539);
}
void live_H_32(double *state, double *unused, double *out_2405588359925709622) {
  H_32(state, unused, out_2405588359925709622);
}
void live_h_13(double *state, double *unused, double *out_2678666661056351279) {
  h_13(state, unused, out_2678666661056351279);
}
void live_H_13(double *state, double *unused, double *out_3784475594372073238) {
  H_13(state, unused, out_3784475594372073238);
}
void live_h_14(double *state, double *unused, double *out_7894829364926935980) {
  h_14(state, unused, out_7894829364926935980);
}
void live_H_14(double *state, double *unused, double *out_6194980452876809247) {
  H_14(state, unused, out_6194980452876809247);
}
void live_h_33(double *state, double *unused, double *out_1066723490886474754) {
  h_33(state, unused, out_1066723490886474754);
}
void live_H_33(double *state, double *unused, double *out_5975734205450868034) {
  H_33(state, unused, out_5975734205450868034);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
